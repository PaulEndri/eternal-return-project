"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WikiCache = void 0;
class WikiCache {
    constructor() {
        this._cache = {};
        this.count = 0;
    }
    get(key) {
        let value = this._cache[key];
        if (typeof value === 'object') {
            value = { ...value };
        }
        return Promise.resolve(value);
    }
    set(key, value) {
        this._cache[key] = value;
        this.count = value !== null ? this.count + 1 : this.count - 1;
        return Promise.resolve();
    }
    async massInsert(data) {
        await Promise.all(Object.entries(data).map(([key, val]) => this.set(key, val)));
    }
    getAll() {
        return Promise.resolve(this._cache);
    }
    getCount() {
        return this.count;
    }
}
exports.WikiCache = WikiCache;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lraUNhY2hlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWxzL3dpa2lDYWNoZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFNQSxNQUFhLFNBQVM7SUFBdEI7UUFDUyxXQUFNLEdBQUcsRUFBRSxDQUFDO1FBQ1osVUFBSyxHQUFHLENBQUMsQ0FBQztJQWlDbkIsQ0FBQztJQS9CTyxHQUFHLENBQVUsR0FBVztRQUM5QixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTdCLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxFQUFFO1lBQzlCLEtBQUssR0FBRyxFQUFFLEdBQUcsS0FBSyxFQUFFLENBQUM7U0FDckI7UUFFRCxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsS0FBVSxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVNLEdBQUcsQ0FBVSxHQUFXLEVBQUUsS0FBUTtRQUN4QyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQztRQUV6QixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztRQUU5RCxPQUFPLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUMxQixDQUFDO0lBRU0sS0FBSyxDQUFDLFVBQVUsQ0FBVSxJQUF1QjtRQUN2RCxNQUFNLE9BQU8sQ0FBQyxHQUFHLENBQ2hCLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBRSxHQUFHLEVBQUUsR0FBRyxDQUFlLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQzNFLENBQUM7SUFDSCxDQUFDO0lBRU0sTUFBTTtRQUNaLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBMkIsQ0FBQyxDQUFDO0lBQzFELENBQUM7SUFFTSxRQUFRO1FBQ2QsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ25CLENBQUM7Q0FDRDtBQW5DRCw4QkFtQ0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogXHJcbiAqIEBwYWNrYWdlRG9jdW1lbnRhdGlvblxyXG4gKiBAaW50ZXJuYWxcclxuICoqL1xyXG5pbXBvcnQgeyBJV2lraUNhY2hlIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9JV2lraUNhY2hlJztcclxuXHJcbmV4cG9ydCBjbGFzcyBXaWtpQ2FjaGUgaW1wbGVtZW50cyBJV2lraUNhY2hlIHtcclxuXHRwcml2YXRlIF9jYWNoZSA9IHt9O1xyXG5cdHByaXZhdGUgY291bnQgPSAwO1xyXG5cclxuXHRwdWJsaWMgZ2V0PFQgPSBhbnk+KGtleTogc3RyaW5nKSB7XHJcblx0XHRsZXQgdmFsdWUgPSB0aGlzLl9jYWNoZVtrZXldO1xyXG5cclxuXHRcdGlmICh0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnKSB7XHJcblx0XHRcdHZhbHVlID0geyAuLi52YWx1ZSB9O1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBQcm9taXNlLnJlc29sdmUodmFsdWUgYXMgVCk7XHJcblx0fVxyXG5cclxuXHRwdWJsaWMgc2V0PFQgPSBhbnk+KGtleTogc3RyaW5nLCB2YWx1ZTogVCkge1xyXG5cdFx0dGhpcy5fY2FjaGVba2V5XSA9IHZhbHVlO1xyXG5cclxuXHRcdHRoaXMuY291bnQgPSB2YWx1ZSAhPT0gbnVsbCA/IHRoaXMuY291bnQgKyAxIDogdGhpcy5jb3VudCAtIDE7XHJcblxyXG5cdFx0cmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xyXG5cdH1cclxuXHJcblx0cHVibGljIGFzeW5jIG1hc3NJbnNlcnQ8VCA9IGFueT4oZGF0YTogUmVjb3JkPHN0cmluZywgVD4pIHtcclxuXHRcdGF3YWl0IFByb21pc2UuYWxsKFxyXG5cdFx0XHRPYmplY3QuZW50cmllcyhkYXRhKS5tYXAoKFsga2V5LCB2YWwgXTogW3N0cmluZywgVF0pID0+IHRoaXMuc2V0KGtleSwgdmFsKSlcclxuXHRcdCk7XHJcblx0fVxyXG5cclxuXHRwdWJsaWMgZ2V0QWxsPFQgPSBhbnk+KCkge1xyXG5cdFx0cmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLl9jYWNoZSBhcyBSZWNvcmQ8c3RyaW5nLCBUPik7XHJcblx0fVxyXG5cclxuXHRwdWJsaWMgZ2V0Q291bnQoKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5jb3VudDtcclxuXHR9XHJcbn1cclxuIl19