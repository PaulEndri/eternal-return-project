[{"C:\\Projects\\erbs\\packages\\ui\\src\\index.tsx":"1","C:\\Projects\\erbs\\packages\\ui\\src\\reportWebVitals.ts":"2","C:\\Projects\\erbs\\packages\\ui\\src\\App.tsx":"3","C:\\Projects\\erbs\\packages\\ui\\src\\components\\itemModal.component.tsx":"4","C:\\Projects\\erbs\\packages\\ui\\src\\state\\itemModal\\index.tsx":"5","C:\\Projects\\erbs\\packages\\ui\\src\\views\\planner\\index.tsx":"6","C:\\Projects\\erbs\\packages\\ui\\src\\components\\layout\\index.tsx":"7","C:\\Projects\\erbs\\packages\\ui\\src\\components\\itemCard.component.tsx":"8","C:\\Projects\\erbs\\packages\\ui\\src\\components\\characterPane.component.tsx":"9","C:\\Projects\\erbs\\packages\\ui\\src\\utilities\\types.tsx":"10","C:\\Projects\\erbs\\packages\\ui\\src\\utilities\\getImageSrc.ts":"11","C:\\Projects\\erbs\\packages\\ui\\src\\utilities\\rarityColor.ts":"12","C:\\Projects\\erbs\\packages\\ui\\src\\components\\itemModalButton.component.tsx":"13","C:\\Projects\\erbs\\packages\\ui\\src\\components\\characterCard.component.tsx":"14","C:\\Projects\\erbs\\packages\\ui\\src\\utilities\\getList.tsx":"15","C:\\Projects\\erbs\\packages\\ui\\src\\components\\characterThumbnail.component.tsx":"16","C:\\Projects\\erbs\\packages\\ui\\src\\views\\wiki\\index.tsx":"17","C:\\Projects\\erbs\\packages\\ui\\src\\components\\page\\index.tsx":"18","C:\\Projects\\erbs\\packages\\ui\\src\\components\\sidebar\\index.tsx":"19","C:\\Projects\\erbs\\packages\\ui\\src\\views\\planner\\children\\routePane.component.tsx":"20","C:\\Projects\\erbs\\packages\\ui\\src\\views\\planner\\children\\equipmentPane.component.tsx":"21","C:\\Projects\\erbs\\packages\\ui\\src\\views\\planner\\children\\equipmentFilter.component.tsx":"22","C:\\Projects\\erbs\\packages\\ui\\src\\views\\planner\\children\\loadOutItem.component.tsx":"23","C:\\Projects\\erbs\\packages\\ui\\src\\state\\loadout.tsx\\index.tsx":"24","C:\\Projects\\erbs\\packages\\ui\\src\\components\\attributeChart.component.tsx":"25","C:\\Projects\\erbs\\packages\\ui\\src\\components\\characterPortrait.component.tsx":"26","C:\\Projects\\erbs\\packages\\ui\\src\\utilities\\reverseWeaponLookup.ts":"27","C:\\Projects\\erbs\\packages\\ui\\src\\utilities\\bgImages.ts":"28","C:\\Projects\\erbs\\packages\\ui\\src\\views\\wiki\\children\\itemPage.component.tsx":"29","C:\\Projects\\erbs\\packages\\ui\\src\\views\\wiki\\children\\characterPage.component.tsx":"30","C:\\Projects\\erbs\\packages\\ui\\src\\views\\wiki\\children\\locationPage.component.tsx":"31","C:\\Projects\\erbs\\packages\\ui\\src\\views\\wiki\\children\\armorPage.component.tsx":"32","C:\\Projects\\erbs\\packages\\ui\\src\\views\\wiki\\children\\weaponPage.component.tsx":"33","C:\\Projects\\erbs\\packages\\ui\\src\\views\\wiki\\children\\ItemSearch.component.tsx":"34","C:\\Projects\\erbs\\packages\\ui\\src\\views\\wiki\\children\\characterStatTable.component.tsx":"35","C:\\Projects\\erbs\\packages\\ui\\src\\views\\players\\index.tsx":"36","C:\\Projects\\erbs\\packages\\ui\\src\\utilities\\playerData.ts":"37"},{"size":517,"mtime":1609353653087,"results":"38","hashOfConfig":"39"},{"size":425,"mtime":1609353653092,"results":"40","hashOfConfig":"39"},{"size":1232,"mtime":1609549149426,"results":"41","hashOfConfig":"39"},{"size":1372,"mtime":1609353653070,"results":"42","hashOfConfig":"39"},{"size":1225,"mtime":1609354768686,"results":"43","hashOfConfig":"39"},{"size":4440,"mtime":1609401883485,"results":"44","hashOfConfig":"39"},{"size":901,"mtime":1609373597449,"results":"45","hashOfConfig":"39"},{"size":4428,"mtime":1609388650067,"results":"46","hashOfConfig":"39"},{"size":2169,"mtime":1609392484024,"results":"47","hashOfConfig":"39"},{"size":137,"mtime":1609355013336,"results":"48","hashOfConfig":"39"},{"size":93,"mtime":1609353653219,"results":"49","hashOfConfig":"39"},{"size":317,"mtime":1609356865447,"results":"50","hashOfConfig":"39"},{"size":1069,"mtime":1609473111067,"results":"51","hashOfConfig":"39"},{"size":2277,"mtime":1609443273016,"results":"52","hashOfConfig":"39"},{"size":1491,"mtime":1609459341941,"results":"53","hashOfConfig":"39"},{"size":2000,"mtime":1609616098741,"results":"54","hashOfConfig":"39"},{"size":4059,"mtime":1609548289071,"results":"55","hashOfConfig":"39"},{"size":1209,"mtime":1609542225466,"results":"56","hashOfConfig":"39"},{"size":896,"mtime":1609389358493,"results":"57","hashOfConfig":"39"},{"size":6699,"mtime":1609387808372,"results":"58","hashOfConfig":"39"},{"size":3872,"mtime":1609388742895,"results":"59","hashOfConfig":"39"},{"size":2668,"mtime":1609388721228,"results":"60","hashOfConfig":"39"},{"size":1012,"mtime":1609390053273,"results":"61","hashOfConfig":"39"},{"size":1531,"mtime":1609392168422,"results":"62","hashOfConfig":"39"},{"size":1021,"mtime":1609447928576,"results":"63","hashOfConfig":"39"},{"size":736,"mtime":1609537095623,"results":"64","hashOfConfig":"39"},{"size":335,"mtime":1609450922007,"results":"65","hashOfConfig":"39"},{"size":237,"mtime":1609536424480,"results":"66","hashOfConfig":"39"},{"size":1065,"mtime":1609548289071,"results":"67","hashOfConfig":"39"},{"size":12998,"mtime":1609548289070,"results":"68","hashOfConfig":"39"},{"size":5272,"mtime":1609548289071,"results":"69","hashOfConfig":"39"},{"size":1110,"mtime":1609548289070,"results":"70","hashOfConfig":"39"},{"size":5626,"mtime":1609548289081,"results":"71","hashOfConfig":"39"},{"size":3181,"mtime":1609548289079,"results":"72","hashOfConfig":"39"},{"size":1422,"mtime":1609548262627,"results":"73","hashOfConfig":"39"},{"size":3727,"mtime":1609569814763,"results":"74","hashOfConfig":"39"},{"size":2548,"mtime":1609542345602,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"fhlqjq",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"78"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"78"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"78"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"C:\\Projects\\erbs\\packages\\ui\\src\\index.tsx",[],["170","171"],"C:\\Projects\\erbs\\packages\\ui\\src\\reportWebVitals.ts",[],"C:\\Projects\\erbs\\packages\\ui\\src\\App.tsx",[],"C:\\Projects\\erbs\\packages\\ui\\src\\components\\itemModal.component.tsx",[],"C:\\Projects\\erbs\\packages\\ui\\src\\state\\itemModal\\index.tsx",[],"C:\\Projects\\erbs\\packages\\ui\\src\\views\\planner\\index.tsx",["172","173","174","175","176","177","178","179","180","181","182"],"import { Categories, Item, Loadout, WeaponsLookup } from 'erbs-sdk';\r\nimport React, { PureComponent, useContext, useState } from 'react';\r\nimport {\r\n\tButton,\r\n\tCard,\r\n\tImage,\r\n\tList,\r\n\tLabel,\r\n\tSegment,\r\n\tGrid,\r\n\tContainer,\r\n\tHeader,\r\n\tTab\r\n} from 'semantic-ui-react';\r\nimport { CharacterPane } from '../../components/characterPane.component';\r\nimport { EquipmentPaneComponent } from './children/equipmentPane.component';\r\nimport { RoutePaneComponent } from './children/routePane.component';\r\nimport { Types } from '../../utilities/types';\r\nimport { PageComponent } from '../../components/page';\r\nimport { getImageSrc } from '../../utilities/getImageSrc';\r\nimport { LoadOutItemComponent } from './children/loadOutItem.component';\r\nimport { LoadoutContext } from '../../state/loadout.tsx';\r\n\r\nexport const initialLoadout = {\r\n\tWeapon: null,\r\n\tChest: null,\r\n\tHead: null,\r\n\tArm: null,\r\n\tLeg: null,\r\n\tAccessory: null\r\n};\r\n\r\nconst loadoutMenu = [\r\n\tTypes.Weapon,\r\n\tTypes.Chest,\r\n\tTypes.Head,\r\n\tTypes.Arm,\r\n\tTypes.Leg,\r\n\tTypes.Accessory\r\n];\r\n\r\nconst SidebarContents = ({ selectedCharacter, loadout, onLoadoutItemClick }) => (\r\n\t<React.Fragment>\r\n\t\t<Segment\r\n\t\t\traised\r\n\t\t\tinverted\r\n\t\t\tsecondary\r\n\t\t\tcolor=\"black\"\r\n\t\t\ttextAlign=\"center\"\r\n\t\t\tplaceholder={!selectedCharacter}\r\n\t\t\tfluid\r\n\t\t\tstyle={{ minHeight: '150px', borderRadius: 0 }}\r\n\t\t>\r\n\t\t\t{selectedCharacter && (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(66, 64, 74, 0.5)',\r\n\t\t\t\t\t\tborder: '1px solid rgba(125, 125, 125, 0.1)',\r\n\t\t\t\t\t\tboxShadow: '0 1px 2px 0 rgba(34,36,38,.15)'\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<img src={getImageSrc(`characters/mini/${selectedCharacter.name}`)} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{!selectedCharacter && <div style={{ maxWidth: '120px' }}>No Character Selected</div>}\r\n\t\t</Segment>\r\n\t\t{loadoutMenu.map((type) => (\r\n\t\t\t<LoadOutItemComponent\r\n\t\t\t\tkey={type}\r\n\t\t\t\ttype={type}\r\n\t\t\t\titem={loadout[type]}\r\n\t\t\t\tonClick={onLoadoutItemClick}\r\n\t\t\t/>\r\n\t\t))}\r\n\t</React.Fragment>\r\n);\r\nconst PlannerView = () => {\r\n\tconst { loadout, updateLoadout, character } = useContext(LoadoutContext);\r\n\r\n\tconst [ selectedItem, setSelectedItem ] = useState(null);\r\n\tconst [ selectedFilter, setSelectedFilter ] = useState(null);\r\n\tconst [ selectedType, setSelectedType ] = useState(null);\r\n\tconst [ viewingCharacter, setViewingCharacter ] = useState(null);\r\n\r\n\tconst onLoadoutItemClick = (item: Item<string>, type) => {\r\n\t\tsetSelectedType(item ? item.clientType : type);\r\n\r\n\t\tif (item) {\r\n\t\t\tsetSelectedItem(item);\r\n\t\t} else {\r\n\t\t\tsetSelectedFilter(type);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onLookupItemClick = (item) => {\r\n\t\tsetSelectedType(item.clientType);\r\n\t\tsetSelectedItem(item);\r\n\t};\r\n\r\n\tconst addSelectedToLoadout = () => {\r\n\t\tupdateLoadout(selectedType, selectedItem);\r\n\t};\r\n\r\n\tconst equipmentPaneProps = {\r\n\t\tselectedItem,\r\n\t\taddSelectedToLoadout,\r\n\t\tselectedFilter,\r\n\t\tselectedCharacter: character,\r\n\t\tsetSelectedFilter,\r\n\t\tonLookupItemClick\r\n\t};\r\n\r\n\treturn (\r\n\t\t<PageComponent\r\n\t\t\ttitle=\"Eternal Return: Black Survival Route & Loadout Planner\"\r\n\t\t\tsidebarTitle=\"Loadout\"\r\n\t\t\tsidebarItems={\r\n\t\t\t\t<SidebarContents\r\n\t\t\t\t\tloadout={loadout}\r\n\t\t\t\t\tselectedCharacter={character}\r\n\t\t\t\t\tonLoadoutItemClick={onLoadoutItemClick}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Container>\r\n\t\t\t\t<Grid centered>\r\n\t\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t\t<Grid.Column width={16} style={{}}>\r\n\t\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tpadding: 1,\r\n\t\t\t\t\t\t\t\t\tpaddingTop: 0,\r\n\t\t\t\t\t\t\t\t\tborderTop: 0,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(51, 51, 51, 0.9)'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Tab\r\n\t\t\t\t\t\t\t\t\tmenu={{\r\n\t\t\t\t\t\t\t\t\t\tcolor: 'red',\r\n\t\t\t\t\t\t\t\t\t\ttertiary: true,\r\n\t\t\t\t\t\t\t\t\t\tinverted: true,\r\n\t\t\t\t\t\t\t\t\t\tattached: true\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tpanes={[\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tmenuItem: 'Character Selection',\r\n\t\t\t\t\t\t\t\t\t\t\trender: () => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CharacterPane\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tviewingCharacter={viewingCharacter}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetViewingCharacter={setViewingCharacter}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tmenuItem: 'Equipment Selection',\r\n\t\t\t\t\t\t\t\t\t\t\trender: () => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<EquipmentPaneComponent {...equipmentPaneProps} />\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tmenuItem: 'Route Generation',\r\n\t\t\t\t\t\t\t\t\t\t\trender: () => <RoutePaneComponent loadout={loadout} />\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Container>\r\n\t\t</PageComponent>\r\n\t);\r\n};\r\n\r\n// wp ch hea arm leg acc\r\n\r\n// q w e r d p\r\n\r\nexport default PlannerView;\r\n","C:\\Projects\\erbs\\packages\\ui\\src\\components\\layout\\index.tsx",[],"C:\\Projects\\erbs\\packages\\ui\\src\\components\\itemCard.component.tsx",["183"],"import React, { FunctionComponent, useContext } from 'react';\r\nimport { Button, Header, Image, Label, List, Segment } from 'semantic-ui-react';\r\nimport { Item } from 'erbs-sdk';\r\nimport { getImageSrc } from '../utilities/getImageSrc';\r\nimport { rarityColor } from '../utilities/rarityColor';\r\nimport { ItemModalButton } from './itemModalButton.component';\r\nimport { ItemModalContext } from '../state/itemModal';\r\n\r\ntype ItemCardProps = {\r\n\titem?: Item<string>;\r\n\taddSelectedToLoadout?: any;\r\n\tshowReqs?: boolean;\r\n};\r\n\r\nexport const ItemCardComponent: FunctionComponent<ItemCardProps> = ({\r\n\titem,\r\n\taddSelectedToLoadout,\r\n\tshowReqs\r\n}) => {\r\n\tconst { setItem } = useContext(ItemModalContext);\r\n\treturn (\r\n\t\t<Segment.Group\r\n\t\t\tstyle={{\r\n\t\t\t\tborderRadius: 0,\r\n\t\t\t\tbackgroundColor: 'rgba(66, 64, 74, 0.2)'\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{item && (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<Segment basic compact textAlign=\"center\">\r\n\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\traised\r\n\t\t\t\t\t\t\tcolor={rarityColor(item.rarity)}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t// backgroundColor: '#877e8a',\r\n\t\t\t\t\t\t\t\tmargin: 'auto',\r\n\t\t\t\t\t\t\t\tmarginBottom: '10px',\r\n\t\t\t\t\t\t\t\tpadding: '1px',\r\n\t\t\t\t\t\t\t\tborder: '2px inset rgba(255, 190, 16, 0.45)',\r\n\t\t\t\t\t\t\t\tmaxWidth: '275px',\r\n\t\t\t\t\t\t\t\toverflow: 'hidden'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\tfloated=\"right\"\r\n\t\t\t\t\t\t\t\tsrc={getImageSrc(item.displayName)}\r\n\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\tbordered\r\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: rarityColor(item.rarity) }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Segment>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor={rarityColor(item.rarity)}\r\n\t\t\t\t\t\t\tas=\"a\"\r\n\t\t\t\t\t\t\thref={`https://eternalreturn.gamepedia.com/${item.name}`}\r\n\t\t\t\t\t\t\tcontent={item.displayName}\r\n\t\t\t\t\t\t\tstyle={{ marginBottom: '5px' }}\r\n\t\t\t\t\t\t\tlabel={item.clientType}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<div style={{ color: 'white', fontStyle: 'italic' }}>\r\n\t\t\t\t\t\t\t{item.description}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t\t{item.stats && (\r\n\t\t\t\t\t\t<Segment inverted raised style={{ backgroundColor: 'transparent' }}>\r\n\t\t\t\t\t\t\t<Header>Stats</Header>\r\n\t\t\t\t\t\t\t<List\r\n\t\t\t\t\t\t\t\titems={Object.entries(item.stats).map(\r\n\t\t\t\t\t\t\t\t\t([ key, val ]) => `${key}: ${val}`\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{item.buildsFrom &&\r\n\t\t\t\t\titem.buildsFrom.length > 0 && (\r\n\t\t\t\t\t\t<Segment inverted style={{ backgroundColor: 'transparent' }}>\r\n\t\t\t\t\t\t\t<Header>Built From</Header>\r\n\t\t\t\t\t\t\t{item.buildsFrom.map(({ name, id }, idx) => (\r\n\t\t\t\t\t\t\t\t<ItemModalButton key={name + idx} id={id} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{item.buildsInto &&\r\n\t\t\t\t\tObject.entries(item.buildsInto).length > 0 && (\r\n\t\t\t\t\t\t<Segment inverted style={{ backgroundColor: 'transparent' }}>\r\n\t\t\t\t\t\t\t<Header>Builds Into</Header>\r\n\t\t\t\t\t\t\t{item.buildsInto.map((item, idx) => (\r\n\t\t\t\t\t\t\t\t<ItemModalButton key={item.id} id={item.id} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{addSelectedToLoadout && (\r\n\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\tattached=\"top\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborder: 0,\r\n\t\t\t\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(0, 0, 0, 0.5)'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\traised\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={() => addSelectedToLoadout(item)}\r\n\t\t\t\t\t\t\t\tcontent={`Add ${item.displayName} to Loadout`}\r\n\t\t\t\t\t\t\t\tcolor=\"green\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{item.materials &&\r\n\t\t\t\t\tshowReqs &&\r\n\t\t\t\t\tObject.entries(item.materials).length > 0 && (\r\n\t\t\t\t\t\t<Segment inverted style={{ backgroundColor: 'rgba(0, 0, 0, 0.05)' }} basic>\r\n\t\t\t\t\t\t\t<Label style={{ width: '100%', textAlign: 'center' }} color=\"red\">\r\n\t\t\t\t\t\t\t\tTotal Material Requirements\r\n\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tflexWrap: 'wrap',\r\n\t\t\t\t\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{Object.entries(\r\n\t\t\t\t\t\t\t\t\titem.materials\r\n\t\t\t\t\t\t\t\t).map(([ material, quantity ], key) => (\r\n\t\t\t\t\t\t\t\t\t<div style={{ margin: '5px' }}>\r\n\t\t\t\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\t\t\t\timage\r\n\t\t\t\t\t\t\t\t\t\t\tkey={key + material}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setItem(material)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<img src={getImageSrc(material)} />\r\n\t\t\t\t\t\t\t\t\t\t\t{quantity}\r\n\t\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t)}\r\n\t\t\t{!item && (\r\n\t\t\t\t<Segment\r\n\t\t\t\t\tattached=\"top\"\r\n\t\t\t\t\tbasic\r\n\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\tplaceholder\r\n\t\t\t\t\tinverted\r\n\t\t\t\t\tstyle={{ borderRadius: 0, border: 0 }}\r\n\t\t\t\t>\r\n\t\t\t\t\tNo Item Selected\r\n\t\t\t\t</Segment>\r\n\t\t\t)}\r\n\t\t</Segment.Group>\r\n\t);\r\n};\r\n","C:\\Projects\\erbs\\packages\\ui\\src\\components\\characterPane.component.tsx",[],"C:\\Projects\\erbs\\packages\\ui\\src\\utilities\\types.tsx",[],"C:\\Projects\\erbs\\packages\\ui\\src\\utilities\\getImageSrc.ts",[],"C:\\Projects\\erbs\\packages\\ui\\src\\utilities\\rarityColor.ts",[],"C:\\Projects\\erbs\\packages\\ui\\src\\components\\itemModalButton.component.tsx",["184","185"],"import React, { useContext } from 'react';\r\nimport { Button, Image, Label, Segment } from 'semantic-ui-react';\r\nimport { Item } from 'erbs-sdk';\r\nimport { getImageSrc } from '../utilities/getImageSrc';\r\nimport { rarityColor } from '../utilities/rarityColor';\r\nimport { ItemModalContext } from '../state/itemModal';\r\n\r\ntype ItemModalButtonProps = {\r\n\tid: any;\r\n\tlabel?: any;\r\n\taction?: any;\r\n};\r\nexport const ItemModalButton: React.FC<ItemModalButtonProps> = ({ id, label, action }) => {\r\n\tconst { setItem } = useContext(ItemModalContext);\r\n\tconst item = new Item(id);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Button\r\n\t\t\t\tcompact\r\n\t\t\t\tlabel={label}\r\n\t\t\t\tcontent={<Image centered rounded size=\"tiny\" src={getImageSrc(item.displayName)} />}\r\n\t\t\t\tonClick={() => (action ? action(item.id) : setItem(item.id, item))}\r\n\t\t\t\tcolor={rarityColor(item.rarity)}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\tmarginBottom: '5px',\r\n\t\t\t\t\tmaxWidth: label ? '150px' : '100px',\r\n\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\tborder: '2px outset rgba(255, 255, 255, 0.2)'\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n","C:\\Projects\\erbs\\packages\\ui\\src\\components\\characterCard.component.tsx",[],"C:\\Projects\\erbs\\packages\\ui\\src\\utilities\\getList.tsx",[],"C:\\Projects\\erbs\\packages\\ui\\src\\components\\characterThumbnail.component.tsx",["186"],"import { FunctionComponent, useState } from 'react';\r\nimport { getImageSrc } from '../utilities/getImageSrc';\r\n\r\ninterface CharacterThumbnailProps {\r\n\tname: string;\r\n\tisActive: boolean;\r\n\tonClick?: Function;\r\n\twidth?: number;\r\n}\r\n\r\nconst CharacterThumbnailComponent: FunctionComponent<CharacterThumbnailProps> = ({\r\n\tname,\r\n\tonClick,\r\n\tisActive,\r\n\twidth = 70\r\n}) => {\r\n\tconst [ hovering, setHovering ] = useState(false);\r\n\tconst parentStyle = {\r\n\t\theight: `${width + 10}px`,\r\n\t\twidth: `${width + 10}px`,\r\n\t\toverflow: 'hidden',\r\n\t\tbackgroundColor: 'rgba(200, 200, 200, 0.15)',\r\n\t\t// margin: '3px',\r\n\t\tborder: '1px solid rgba(255, 255, 255, 0.1)'\r\n\t};\r\n\r\n\tconst containerStyle = {\r\n\t\toverflow: 'hidden',\r\n\t\ttransform: 'skew(45deg) scale(1.2)',\r\n\t\tbackgroundColor: 'rgba(255, 255, 255, 0.15)',\r\n\t\tborder: '1px solid ',\r\n\t\tborderColor: 'rgba(200, 200, 200, 0.5)',\r\n\t\twidth: `${width + 20}px`,\r\n\t\theight: `${width + 20}px`\r\n\t};\r\n\r\n\tif ((hovering || isActive) && onClick) {\r\n\t\tObject.assign(containerStyle, {\r\n\t\t\tbackgroundColor: 'rgba(200, 200, 200, 1)',\r\n\t\t\ttransform: 'skew(45deg) scale(1.2)',\r\n\t\t\tborderColor: 'white'\r\n\t\t});\r\n\r\n\t\tObject.assign(parentStyle, {\r\n\t\t\tbackgroundColor: 'rgba(255, 190, 16, 0.9)'\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\t// padding: 0,\r\n\t\t\t\t// margin: 2,\r\n\t\t\t\tbackgroundColor: 'rgba(255, 255, 255, 0.01)',\r\n\t\t\t\tborder: '1px solid rgba(255, 255, 255, 0.02)'\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div\r\n\t\t\t\tonMouseEnter={() => setHovering(true)}\r\n\t\t\t\tonMouseLeave={() => setHovering(false)}\r\n\t\t\t\tonClick={(e) => (onClick ? onClick(e) : null)}\r\n\t\t\t\tstyle={parentStyle}\r\n\t\t\t\tclassName=\"test\"\r\n\t\t\t>\r\n\t\t\t\t<div style={containerStyle}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\theight: 'auto',\r\n\t\t\t\t\t\t\twidth: `${width}px`,\r\n\t\t\t\t\t\t\tmargin: 'auto',\r\n\t\t\t\t\t\t\tmarginTop: '-5px',\r\n\t\t\t\t\t\t\ttransform: 'skew(-45deg)'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tsrc={getImageSrc(`characters/mini/${name}`)}\r\n\t\t\t\t\t\tclassName=\"ui medium image\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CharacterThumbnailComponent;\r\n","C:\\Projects\\erbs\\packages\\ui\\src\\views\\wiki\\index.tsx",["187","188","189","190","191","192"],"import { Armors, Locations, Weapons } from 'erbs-sdk';\r\nimport React, { PureComponent, useState } from 'react';\r\nimport { Segment, Menu, Grid, List, Label, Header } from 'semantic-ui-react';\r\nimport { Link, Route, Switch, useHistory, useLocation, useRouteMatch } from 'react-router-dom';\r\nimport { PageComponent } from '../../components/page';\r\nimport { Characters } from 'erbs-data';\r\nimport { CharacterLandingPage, CharacterPage } from './children/characterPage.component';\r\nimport { WeaponPage } from './children/weaponPage.component';\r\nimport { ArmorPage } from './children/armorPage.component';\r\nimport { ItemPage } from './children/itemPage.component';\r\nimport { LocationLandingPage, LocationPage } from './children/locationPage.component';\r\n\r\nconst menuItems = [\r\n\t[ 'characters', 'Characters', Object.keys(Characters) ],\r\n\t[ 'weapons', 'Weapons', Object.values(Weapons).filter((wpn) => wpn !== 'Whip') ],\r\n\t[ 'armors', 'Armors', Object.values(Armors) ],\r\n\t[ 'locations', 'Locations', Object.values(Locations) ],\r\n\t[ 'items', 'Items' ],\r\n\t[ 'animals', 'Animals' ]\r\n];\r\n\r\nexport const initialLoadout = {\r\n\tWeapon: null,\r\n\tChest: null,\r\n\tHead: null,\r\n\tArm: null,\r\n\tLeg: null,\r\n\tAccessory: null\r\n};\r\n\r\nconst WikiView = () => {\r\n\tconst location = useLocation();\r\n\tconst { path, url } = useRouteMatch();\r\n\tconst history = useHistory();\r\n\r\n\tconst sidebarItems = menuItems.map(\r\n\t\t([ route, name, subMenuItems ]: [string, string, string[]]) => {\r\n\t\t\tconst isActive = location.pathname.includes(route);\r\n\t\t\tconst path = `/wiki/${route}`;\r\n\t\t\tconst isRoot = location.pathname === path;\r\n\t\t\tconst showSubMenu = isActive && !isRoot && subMenuItems && subMenuItems.length > 0;\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<Menu.Item key={route} active={isActive} as={Link} to={path}>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t\t{showSubMenu && (\r\n\t\t\t\t\t\t<Menu.Menu>\r\n\t\t\t\t\t\t\t{subMenuItems.map((subRoute) => (\r\n\t\t\t\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\t\t\t\tname={subRoute}\r\n\t\t\t\t\t\t\t\t\tkey={subRoute + route}\r\n\t\t\t\t\t\t\t\t\tas={Link}\r\n\t\t\t\t\t\t\t\t\tto={`${path}/${subRoute}`}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Menu.Menu>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t);\r\n\t\t}\r\n\t);\r\n\treturn (\r\n\t\t<PageComponent\r\n\t\t\tsidebarTitle=\"Information\"\r\n\t\t\tsidebarItems={sidebarItems}\r\n\t\t\ttitle=\"Eternal Return: Black Survival Information Center\"\r\n\t\t>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path={`${path}/characters/:id`}>\r\n\t\t\t\t\t<CharacterPage />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route exact path={`${path}/characters`}>\r\n\t\t\t\t\t<CharacterLandingPage />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route exact path={`${path}/weapons`}>\r\n\t\t\t\t\t<WeaponPage />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path={`${path}/weapons/:id`}>\r\n\t\t\t\t\t<WeaponPage />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route exact path={`${path}/armors`}>\r\n\t\t\t\t\t<ArmorPage />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path={`${path}/armors/:id`}>\r\n\t\t\t\t\t<ArmorPage />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route exact path={`${path}/items`}>\r\n\t\t\t\t\t<ItemPage />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path={`${path}/items/:id`}>\r\n\t\t\t\t\t<ItemPage />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route exact path={`${path}/locations`}>\r\n\t\t\t\t\t<LocationLandingPage />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path={`${path}/locations/:id`}>\r\n\t\t\t\t\t<LocationPage />\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t\t<Segment.Group>\r\n\t\t\t\t<Segment>\r\n\t\t\t\t\t<Header>Characters</Header>\r\n\t\t\t\t\t{(menuItems[0][2] as string[]).map((char) => (\r\n\t\t\t\t\t\t<Label icon=\"user\" as={Link} to={`/wiki/characters/${char}`}>\r\n\t\t\t\t\t\t\t{char}\r\n\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Segment>\r\n\t\t\t\t<Segment>\r\n\t\t\t\t\t<Header>Weapons</Header>\r\n\t\t\t\t\t{(menuItems[1][2] as string[]).map((char) => (\r\n\t\t\t\t\t\t<Label icon=\"user\" as={Link} to={`/wiki/weapons/${char}`}>\r\n\t\t\t\t\t\t\t{char}\r\n\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Segment>\r\n\t\t\t\t<Segment>\r\n\t\t\t\t\t<Header>Armors</Header>\r\n\t\t\t\t\t{(menuItems[2][2] as string[]).map((char) => (\r\n\t\t\t\t\t\t<Label icon=\"user\" as={Link} to={`/wiki/armors/${char}`}>\r\n\t\t\t\t\t\t\t{char}\r\n\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Segment>\r\n\t\t\t\t<Segment>\r\n\t\t\t\t\t<Header>Locations</Header>\r\n\t\t\t\t\t{(menuItems[3][2] as string[]).map((char) => (\r\n\t\t\t\t\t\t<Label icon=\"user\" as={Link} to={`/wiki/locations/${char}`}>\r\n\t\t\t\t\t\t\t{char}\r\n\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Segment>\r\n\t\t\t</Segment.Group>\r\n\t\t</PageComponent>\r\n\t);\r\n};\r\n\r\nexport default WikiView;\r\n","C:\\Projects\\erbs\\packages\\ui\\src\\components\\page\\index.tsx",["193"],"import React, { StatelessComponent, ReactNode } from 'react';\r\nimport { Segment, Header } from 'semantic-ui-react';\r\nimport { BG_THIRD } from '../../utilities/bgImages';\r\nimport { SidebarComponent } from '../sidebar';\r\n\r\ninterface PageProps {\r\n\tsidebarItems?: ReactNode;\r\n\ttitle: ReactNode;\r\n\tsidebarTitle?: ReactNode;\r\n}\r\n\r\nexport const PageComponent: StatelessComponent<PageProps> = ({\r\n\tsidebarItems,\r\n\ttitle,\r\n\tsidebarTitle,\r\n\tchildren\r\n}) => {\r\n\treturn (\r\n\t\t<Segment basic style={{ padding: 0 }}>\r\n\t\t\t{sidebarTitle && (\r\n\t\t\t\t<SidebarComponent title={sidebarTitle}>{sidebarItems}</SidebarComponent>\r\n\t\t\t)}\r\n\t\t\t<div style={{ overflow: 'auto' }}>\r\n\t\t\t\t<Segment\r\n\t\t\t\t\tinverted\r\n\t\t\t\t\traised\r\n\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\tsecondary\r\n\t\t\t\t\tpadded={false}\r\n\t\t\t\t\tbasic\r\n\t\t\t\t\tstyle={{ marginBottom: 0, padding: 0 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Header as=\"h2\" style={{ padding: '10px' }}>\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t</Segment>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: 'flow-root',\r\n\t\t\t\t\t\toverflow: 'auto',\r\n\t\t\t\t\t\toverflowX: 'hidden',\r\n\t\t\t\t\t\tmaxHeight: window.innerHeight - 90,\r\n\r\n\t\t\t\t\t\tminHeight: window.innerHeight - 180\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Segment>\r\n\t);\r\n};\r\n","C:\\Projects\\erbs\\packages\\ui\\src\\components\\sidebar\\index.tsx",["194","195"],"import React, { ReactNode, StatelessComponent } from 'react';\r\nimport { Segment, Menu, Header } from 'semantic-ui-react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\ninterface SidebarProps {\r\n\ttitle: ReactNode;\r\n}\r\nexport const SidebarComponent: StatelessComponent<SidebarProps> = ({ title, children }) => {\r\n\treturn (\r\n\t\t<Segment\r\n\t\t\tbasic\r\n\t\t\tcompact\r\n\t\t\tinverted\r\n\t\t\tfluid\r\n\t\t\tfloated=\"left\"\r\n\t\t\ttextAlign=\"left\"\r\n\t\t\tcolor=\"black\"\r\n\t\t\tstyle={{\r\n\t\t\t\tborder: 0,\r\n\t\t\t\tborderRadius: 0,\r\n\t\t\t\tmarginTop: 0,\r\n\t\t\t\tminHeight: '95vh',\r\n\t\t\t\tpadding: 0,\r\n\t\t\t\tmarginRight: 0,\r\n\t\t\t\twidth: '150px'\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Menu inverted vertical style={{ border: 0, borderRadius: 0 }} fluid color=\"black\">\r\n\t\t\t\t<Menu.Header style={{ padding: '10px' }}>\r\n\t\t\t\t\t<Header as=\"h2\" color=\"black\" inverted>\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t</Menu.Header>\r\n\t\t\t\t{children}\r\n\t\t\t</Menu>\r\n\t\t</Segment>\r\n\t);\r\n};\r\n",["196","197"],"C:\\Projects\\erbs\\packages\\ui\\src\\views\\planner\\children\\routePane.component.tsx",["198"],"import React, { useContext, useState } from 'react';\r\nimport { Segment, Grid, Header, Button, Label, Form, Dropdown } from 'semantic-ui-react';\r\nimport { getImageSrc } from '../../../utilities/getImageSrc';\r\nimport { Loadout, Locations, Route } from 'erbs-sdk';\r\nimport { ItemModalContext } from '../../../state/itemModal';\r\n\r\ninterface RoutePaneProps {\r\n\tloadout: Loadout;\r\n}\r\n\r\nconst defaultWeights = {\r\n\tWeapon: 1,\r\n\tChest: 1,\r\n\tHead: 1,\r\n\tArm: 1,\r\n\tLeg: 1,\r\n\tAccessory: 1\r\n};\r\n\r\nexport const RoutePaneComponent: React.FC<RoutePaneProps> = ({ loadout }) => {\r\n\tconst [ routes, setRoutes ] = useState([]);\r\n\tconst [ weights, updateWeights ] = useState(defaultWeights);\r\n\tconst [ startingLocation, setStartingLocation ] = useState(null);\r\n\r\n\tconst { setItem } = useContext(ItemModalContext);\r\n\r\n\tconst generateRoute = () => {\r\n\t\ttry {\r\n\t\t\tconst route = new Route(loadout);\r\n\t\t\tsetRoutes(route.generate());\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(e);\r\n\t\t\tsetRoutes([]);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid>\r\n\t\t\t<Grid.Row width={11}>\r\n\t\t\t\t<Grid.Column mobile={10} tablet={6} computer={6} widescreen={5}>\r\n\t\t\t\t\t<Segment.Group\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(66, 64, 74, 0.2)',\r\n\t\t\t\t\t\t\tmarginTop: 14\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborder: 0,\r\n\t\t\t\t\t\t\t\tborderRadius: 0\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\traised\r\n\t\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\t\tcolor=\"black\"\r\n\t\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Header>Customization</Header>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\tstyle={{ margin: 0, background: 'transparent' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Header style={{ textAlign: 'center' }}>Equipment Importance</Header>\r\n\t\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tflexFlow: 'wrap column',\r\n\t\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{Object.keys(defaultWeights).map((weight, idx) => (\r\n\t\t\t\t\t\t\t\t\t<Form.Field inverted key={weight + idx}>\r\n\t\t\t\t\t\t\t\t\t\t<label style={{ textTransform: 'capitalize' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{loadout &&\r\n\t\t\t\t\t\t\t\t\t\t\tloadout[weight.toLowerCase()] &&\r\n\t\t\t\t\t\t\t\t\t\t\tloadout[weight.toLowerCase()].name ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\tloadout[weight.toLowerCase()].name\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\tweight\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\t\t\t\t\t\t\tstep={1}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbackground: `linear-gradient(to right, #2185d0 0%, #2185d0 ${weights[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tweight\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t]}%, #fff ${weights[weight]}%, #fff 100%)`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: '8px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\theight: '5px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttransition: 'background 450ms ease-in',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tWebkitAppearance: 'none',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t'&::webkit-slider-thumb': {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tWebkitApperance: 'none',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'red'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t} as any\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\t\t\t\t\t\tmax={100}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={weights[weight]}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\tupdateWeights({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t...weights,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t[weight]: e.target.value\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\t\tstyle={{ padding: 8, margin: 0 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Header>Desired Starting Location</Header>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t<Segment>\r\n\t\t\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\tplaceholder=\"Automatic\"\r\n\t\t\t\t\t\t\t\tvalue={startingLocation}\r\n\t\t\t\t\t\t\t\tonChange={(e, { value }) => setStartingLocation(value)}\r\n\t\t\t\t\t\t\t\toptions={[ { key: '', value: null, text: 'Automatic' } ].concat(\r\n\t\t\t\t\t\t\t\t\tObject.keys(Locations)\r\n\t\t\t\t\t\t\t\t\t\t.filter((loc) => loc !== Locations['Research Center'])\r\n\t\t\t\t\t\t\t\t\t\t.map((loc) => ({\r\n\t\t\t\t\t\t\t\t\t\t\tkey: loc,\r\n\t\t\t\t\t\t\t\t\t\t\ttext: loc,\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: loc\r\n\t\t\t\t\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborder: 0,\r\n\t\t\t\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(0, 0, 0, 0.5)'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\traised\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\tonClick={generateRoute}\r\n\t\t\t\t\t\t\t\tcontent=\"Generate Routes\"\r\n\t\t\t\t\t\t\t\tcolor=\"green\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column width={10}>\r\n\t\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t\t\t<Segment.Group\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(66, 64, 74, 0.2)',\r\n\t\t\t\t\t\t\t\t\tmarginTop: 14\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Segment basic color=\"black\" inverted textAlign=\"center\" raised>\r\n\t\t\t\t\t\t\t\t\t<Header>Total Materials Needed</Header>\r\n\t\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t\t<Segment basic raised stacked>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tflexWrap: 'wrap',\r\n\t\t\t\t\t\t\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{Object.entries(loadout.materials)\r\n\t\t\t\t\t\t\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t\t\t\t\t\t\t([ material ]) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmaterial && material !== 'undefined'\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t.map(([ material, quantity ], key) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div key={key + material} style={{ margin: '5px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"teal\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\timage\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setItem(material)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={getImageSrc(material)} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Label.Detail>{quantity}</Label.Detail>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid.Row>\r\n\r\n\t\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t\t\t<Segment.Group\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(66, 64, 74, 0.2)',\r\n\t\t\t\t\t\t\t\t\tmarginTop: 14\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\t\t\tattached=\"top\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tborder: 0,\r\n\t\t\t\t\t\t\t\t\t\tborderRadius: 0\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\traised\r\n\t\t\t\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\t\t\t\tcolor=\"black\"\r\n\t\t\t\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Header inverted style={{ textTransform: 'capitalize' }}>\r\n\t\t\t\t\t\t\t\t\t\tRoutes\r\n\t\t\t\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t\t<Segment basic>\r\n\t\t\t\t\t\t\t\t\t{!routes.length && (\r\n\t\t\t\t\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\t\t\t\tsecondary\r\n\t\t\t\t\t\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder\r\n\t\t\t\t\t\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tNo Routes Generated\r\n\t\t\t\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{routes.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<div>{JSON.stringify(routes, null, 2)}</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid.Row>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","C:\\Projects\\erbs\\packages\\ui\\src\\views\\planner\\children\\equipmentPane.component.tsx",["199","200","201"],"import React, { useContext } from 'react';\r\nimport { Segment, Grid, Header, Button, Image, Transition, Label } from 'semantic-ui-react';\r\nimport { ItemCardComponent } from '../../../components/itemCard.component';\r\nimport { EquipmentFilterComponent } from './equipmentFilter.component';\r\nimport { getItemList } from '../../../utilities/getList';\r\nimport { rarityColor } from '../../../utilities/rarityColor';\r\nimport { getImageSrc } from '../../../utilities/getImageSrc';\r\nimport { Item, Weapons } from 'erbs-sdk';\r\nimport { ItemModalContext } from '../../../state/itemModal';\r\n\r\ninterface EquipmentPaneProps {\r\n\tselectedItem: any;\r\n\taddSelectedToLoadout: () => void;\r\n\tselectedFilter: any;\r\n\tselectedCharacter: any;\r\n\tsetSelectedFilter: React.Dispatch<string>;\r\n\tonLookupItemClick: (item: any) => void;\r\n}\r\n\r\nexport const EquipmentPaneComponent: React.FC<EquipmentPaneProps> = ({\r\n\tselectedItem,\r\n\taddSelectedToLoadout,\r\n\tselectedFilter,\r\n\tselectedCharacter,\r\n\tsetSelectedFilter,\r\n\tonLookupItemClick\r\n}) => {\r\n\tlet item: Item<any>;\r\n\tconst { setItem } = useContext(ItemModalContext);\r\n\r\n\ttry {\r\n\t\titem = selectedItem ? new Item(selectedItem.name) : null;\r\n\t} catch (e) {\r\n\t\tconsole.warn(e);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grid>\r\n\t\t\t<Grid.Row width={11}>\r\n\t\t\t\t<Grid.Column mobile={10} tablet={6} computer={6} widescreen={5}>\r\n\t\t\t\t\t<Segment.Group\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(66, 64, 74, 0.2)'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Segment textAlign=\"center\" basic fluid style={{ padding: 0, margin: 0 }}>\r\n\t\t\t\t\t\t\t<ItemCardComponent\r\n\t\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\t\taddSelectedToLoadout={addSelectedToLoadout}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column width={10}>\r\n\t\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t\t\t<EquipmentFilterComponent\r\n\t\t\t\t\t\t\t\tselectedFilter={selectedFilter}\r\n\t\t\t\t\t\t\t\tselectedCharacter={selectedCharacter}\r\n\t\t\t\t\t\t\t\tsetSelectedFilter={setSelectedFilter}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid.Row>\r\n\r\n\t\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t\t\t<Segment.Group\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(66, 64, 74, 0.4)'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\t\t\tattached=\"top\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tborder: 0,\r\n\t\t\t\t\t\t\t\t\t\tborderRadius: 0\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\traised\r\n\t\t\t\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\t\t\t\tcolor=\"black\"\r\n\t\t\t\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Header inverted style={{ textTransform: 'capitalize' }}>\r\n\t\t\t\t\t\t\t\t\t\t{selectedFilter ? (\r\n\t\t\t\t\t\t\t\t\t\t\tselectedFilter.toLowerCase()\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t'equipment'\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tflexFlow: 'row wrap',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{!selectedFilter && (\r\n\t\t\t\t\t\t\t\t\t\t<Segment fluid secondary inverted placeholder>\r\n\t\t\t\t\t\t\t\t\t\t\tSelect a Filter\r\n\t\t\t\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{selectedFilter &&\r\n\t\t\t\t\t\t\t\t\t\tgetItemList(selectedFilter).map((item) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: 2,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'2px outset rgba(255, 255, 255, 0.2)'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={rarityColor(item.rarity)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => onLookupItemClick(item)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Transition>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"tiny\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={getImageSrc(item.displayName)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Transition>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid.Row>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","C:\\Projects\\erbs\\packages\\ui\\src\\views\\planner\\children\\equipmentFilter.component.tsx",[],"C:\\Projects\\erbs\\packages\\ui\\src\\views\\planner\\children\\loadOutItem.component.tsx",["202"],"import React from 'react';\r\nimport { Button, Image, Menu, Segment } from 'semantic-ui-react';\r\nimport { getImageSrc } from '../../../utilities/getImageSrc';\r\nimport { rarityColor } from '../../../utilities/rarityColor';\r\n\r\nexport const LoadOutItemComponent = ({ item, onClick, type }) => {\r\n\tif (!item || !item.name) {\r\n\t\treturn (\r\n\t\t\t<Menu.Item\r\n\t\t\t\tfluid\r\n\t\t\t\tonClick={() => onClick(null, type)}\r\n\t\t\t\tstyle={{ borderRadius: '0px', borderBottom: '1px inset' }}\r\n\t\t\t>\r\n\t\t\t\t{type}\r\n\t\t\t</Menu.Item>\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<Menu.Item\r\n\t\t\tcompact\r\n\t\t\tfluid\r\n\t\t\tonClick={() => onClick(item, type)}\r\n\t\t\tstyle={{\r\n\t\t\t\tborderRadius: '0px'\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Button\r\n\t\t\t\tcolor={rarityColor(item.rarity)}\r\n\t\t\t\tfluid\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\tborder: '2px outset rgba(200, 200, 200, 0.5)'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Image\r\n\t\t\t\t\tstyle={{ borderRadius: 0 }}\r\n\t\t\t\t\tcentered\r\n\t\t\t\t\tsize=\"tiny\"\r\n\t\t\t\t\tsrc={getImageSrc(item.displayName)}\r\n\t\t\t\t/>\r\n\t\t\t</Button>\r\n\t\t</Menu.Item>\r\n\t);\r\n};\r\n","C:\\Projects\\erbs\\packages\\ui\\src\\state\\loadout.tsx\\index.tsx",["203"],"import { Categories, Character, ICharacter, Item, Loadout } from 'erbs-sdk';\r\nimport React, { FunctionComponent, useState } from 'react';\r\nimport { Types } from '../../utilities/types';\r\n\r\nconst initialLoadout = {\r\n\tWeapon: null,\r\n\tChest: null,\r\n\tHead: null,\r\n\tArm: null,\r\n\tLeg: null,\r\n\tAccessory: null\r\n};\r\n\r\nconst initialState = {\r\n\tloadout: Loadout.GenerateLoadout(initialLoadout),\r\n\tcharacter: null,\r\n\tupdateCharacter: (character: ICharacter | Character) => null,\r\n\tupdateLoadout: (slot, item) => null\r\n};\r\n\r\nexport const LoadoutContext = React.createContext(initialState);\r\nexport const LoadoutConsumer = LoadoutContext.Consumer;\r\nexport const LoadoutProvider: FunctionComponent = ({ children }) => {\r\n\tconst [ character, setCharacter ] = useState<Character>(null);\r\n\tconst [ loadout, setLoadout ] = useState<Loadout>(initialState.loadout);\r\n\r\n\tconst updateCharacter = (character: ICharacter | Character) => {\r\n\t\tif (character instanceof Character) {\r\n\t\t\tsetCharacter(character);\r\n\t\t} else if (character) {\r\n\t\t\tsetCharacter(new Character(character));\r\n\t\t} else {\r\n\t\t\tsetCharacter(null);\r\n\t\t}\r\n\t};\r\n\r\n\tconst updateLoadout = (slot, item) => {\r\n\t\tif (!slot) {\r\n\t\t\tsetLoadout(Loadout.GenerateLoadout(initialLoadout));\r\n\t\t} else {\r\n\t\t\tsetLoadout(\r\n\t\t\t\tloadout.setSlot(item.category === Categories.Weapon ? Types.Weapon : slot, item)\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst state = {\r\n\t\tcharacter,\r\n\t\tloadout,\r\n\t\tupdateCharacter,\r\n\t\tupdateLoadout\r\n\t};\r\n\r\n\treturn <LoadoutContext.Provider value={state}>{children}</LoadoutContext.Provider>;\r\n};\r\n","C:\\Projects\\erbs\\packages\\ui\\src\\components\\attributeChart.component.tsx",["204","205"],"/* tslint:disable */\r\n\r\nimport { ICharacterAttribute } from 'erbs-sdk';\r\nimport React from 'react';\r\nimport {\r\n\tRadar,\r\n\tResponsiveContainer,\r\n\tPolarGrid,\r\n\tLegend,\r\n\tPolarAngleAxis,\r\n\tPolarRadiusAxis,\r\n\tRadarChart\r\n} from 'recharts/umd/Recharts';\r\n\r\ninterface AttrProps {\r\n\tattributeBlock: ICharacterAttribute;\r\n}\r\n\r\nexport const AttributeChartComponent: React.FC<AttrProps> = ({ attributeBlock }) => {\r\n\tconst { mastery, controlDifficulty, ...stats } = attributeBlock;\r\n\tconst data = [\r\n\t\t{ name: 'Mobility', fullMark: 3, data: stats.move },\r\n\t\t{ name: 'CC', fullMark: 3, data: stats.disruptor },\r\n\r\n\t\t{ name: 'Attack', fullMark: 3, data: stats.attack },\r\n\r\n\t\t{ name: 'Support', fullMark: 3, data: stats.assistance },\r\n\t\t{ name: 'Def', fullMark: 3, data: stats.defense }\r\n\t];\r\n\treturn (\r\n\t\t<RadarChart width={200} height={150} data={data}>\r\n\t\t\t<PolarGrid />\r\n\t\t\t<PolarAngleAxis dataKey=\"name\" />\r\n\t\t\t<Radar name={'Stats'} dataKey={'data'} fill={'brown'} fillOpacity={'0.4'} />\r\n\t\t\t<Legend />\r\n\t\t</RadarChart>\r\n\t);\r\n};\r\n","C:\\Projects\\erbs\\packages\\ui\\src\\components\\characterPortrait.component.tsx",[],"C:\\Projects\\erbs\\packages\\ui\\src\\utilities\\reverseWeaponLookup.ts",[],"C:\\Projects\\erbs\\packages\\ui\\src\\utilities\\bgImages.ts",[],"C:\\Projects\\erbs\\packages\\ui\\src\\views\\wiki\\children\\itemPage.component.tsx",["206"],"import React from 'react';\r\nimport { Button, Container, Menu } from 'semantic-ui-react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { getMiscList, getMiscListKeys } from '../../../utilities/getList';\r\nimport { ItemSearchComponent } from './ItemSearch.component';\r\n\r\nexport const ItemPage = () => {\r\n\tconst history = useHistory();\r\n\tconst { id } = useParams() as any;\r\n\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<Menu\r\n\t\t\t\tclassName=\"attached\"\r\n\t\t\t\tcolor=\"red\"\r\n\t\t\t\tinverted\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\tmarginBottom: 0,\r\n\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{getMiscListKeys().map((type) => (\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tkey={type}\r\n\t\t\t\t\t\tactive={id === type}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\thistory.push(`/wiki/items/${type}`);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborderRadius: 0\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{type}s\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t))}\r\n\t\t\t</Menu>\r\n\r\n\t\t\t<ItemSearchComponent\r\n\t\t\t\tpath={`/wiki/items`}\r\n\t\t\t\titems={getMiscList(id)}\r\n\t\t\t\ttitle={`${id || 'Item'} Options`}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t);\r\n};\r\n","C:\\Projects\\erbs\\packages\\ui\\src\\views\\wiki\\children\\characterPage.component.tsx",[],"C:\\Projects\\erbs\\packages\\ui\\src\\views\\wiki\\children\\locationPage.component.tsx",["207","208","209","210","211"],"import React from 'react';\r\nimport {\r\n\tGrid,\r\n\tContainer,\r\n\tMenu,\r\n\tSegment,\r\n\tHeader,\r\n\tLabel,\r\n\tButton,\r\n\tImage,\r\n\tTable\r\n} from 'semantic-ui-react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { getMiscList, getMiscListKeys } from '../../../utilities/getList';\r\nimport { ItemSearchComponent } from './ItemSearch.component';\r\nimport { LocationsLookup, Region, Locations } from 'erbs-sdk';\r\nimport { getImageSrc } from '../../../utilities/getImageSrc';\r\nimport { Locations as LocData } from 'erbs-data';\r\nimport { ItemModalButton } from '../../../components/itemModalButton.component';\r\n\r\nconst LocationView: React.FC = ({ children }) => {\r\n\tconst history = useHistory();\r\n\tconst { id } = useParams() as any;\r\n\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<Menu\r\n\t\t\t\tclassName=\"attached\"\r\n\t\t\t\tcolor=\"red\"\r\n\t\t\t\tinverted\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\tmarginBottom: 0,\r\n\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{Object.keys(Locations).map((type) => (\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tkey={type}\r\n\t\t\t\t\t\tactive={id === type}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\thistory.push(`/wiki/locations/${type}`);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborderRadius: 0\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{type}\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t))}\r\n\t\t\t</Menu>\r\n\t\t\t{children}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport const LocationLandingPage = () => {\r\n\tconst history = useHistory();\r\n\r\n\treturn (\r\n\t\t<LocationView>\r\n\t\t\t<Segment style={{ marginTop: 0, borderRadius: 0 }} textAlign=\"center\">\r\n\t\t\t\t<Table selectable striped collapsing style={{ margin: 'auto' }}>\r\n\t\t\t\t\t<Table.Header>\r\n\t\t\t\t\t\t<Table.HeaderCell>Name</Table.HeaderCell>\r\n\t\t\t\t\t\t<Table.HeaderCell>Wildlife</Table.HeaderCell>\r\n\t\t\t\t\t\t<Table.HeaderCell>Drops</Table.HeaderCell>\r\n\t\t\t\t\t</Table.Header>\r\n\t\t\t\t\t<Table.Body>\r\n\t\t\t\t\t\t{Object.entries(LocData).map(([ loc, locObject ]) => (\r\n\t\t\t\t\t\t\t<Table.Row\r\n\t\t\t\t\t\t\t\tkey={loc}\r\n\t\t\t\t\t\t\t\tonClick={() => history.push(`/wiki/locations/${locObject.name}`)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Table.Cell>{locObject.name}</Table.Cell>\r\n\t\t\t\t\t\t\t\t<Table.Cell>\r\n\t\t\t\t\t\t\t\t\t{locObject.animals.map(({ name }, id) => (\r\n\t\t\t\t\t\t\t\t\t\t<Label key={id}>\r\n\t\t\t\t\t\t\t\t\t\t\t{`${name}`.replace(/([A-Z])/g, ' $1').trim()}\r\n\t\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Table.Cell>\r\n\t\t\t\t\t\t\t\t<Table.Cell>\r\n\t\t\t\t\t\t\t\t\t{locObject.drops.map(({ name, id, quantity }) => (\r\n\t\t\t\t\t\t\t\t\t\t<Label key={id}>\r\n\t\t\t\t\t\t\t\t\t\t\t{`${name}`.replace(/([A-Z])/g, ' $1').trim()}\r\n\t\t\t\t\t\t\t\t\t\t\t<Label.Detail>{quantity}</Label.Detail>\r\n\t\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Table.Cell>\r\n\t\t\t\t\t\t\t</Table.Row>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Table.Body>\r\n\t\t\t\t</Table>\r\n\t\t\t</Segment>\r\n\t\t</LocationView>\r\n\t);\r\n};\r\n\r\nexport const LocationPage = () => {\r\n\tconst { id } = useParams() as any;\r\n\tconst history = useHistory();\r\n\r\n\tconst location = id ? LocData[id.replace(' ', '')] : null;\r\n\r\n\treturn (\r\n\t\t<LocationView>\r\n\t\t\t<Segment\r\n\t\t\t\tcolor=\"black\"\r\n\t\t\t\tfluid\r\n\t\t\t\tinverted\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\tmarginTop: 12,\r\n\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\tborderRadius: 0\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcentered\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundImage: `url(${process.env\r\n\t\t\t\t\t\t\t.PUBLIC_URL}/assets/images/locations/${id}.jpg) `,\r\n\t\t\t\t\t\tbackgroundSize: 'cover'\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid.Row\r\n\t\t\t\t\t\tverticalAlign=\"middle\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(76, 70, 70, 1)',\r\n\t\t\t\t\t\t\tborderBottom: '1px groove',\r\n\t\t\t\t\t\t\tborderTop: '1px groove'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tcentered\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid.Column width={16} color=\"orange\">\r\n\t\t\t\t\t\t\t<Header inverted textAlign=\"center\">\r\n\t\t\t\t\t\t\t\t{id}\r\n\t\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t\t<Grid.Row centered style={{ backgroundColor: 'rgba(10, 0, 0, 0.5)' }}>\r\n\t\t\t\t\t\t<Grid.Column width={16} textAlign=\"center\">\r\n\t\t\t\t\t\t\t<Header inverted textAlign=\"center\">\r\n\t\t\t\t\t\t\t\tConnections\r\n\t\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t\t{location.connections &&\r\n\t\t\t\t\t\t\t\tlocation.connections.length > 0 &&\r\n\t\t\t\t\t\t\t\tlocation.connections.map(({ name }) => (\r\n\t\t\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"yellow\"\r\n\t\t\t\t\t\t\t\t\t\tas={Button}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => history.push(`/wiki/locations/${name}`)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t{location.teleport && <Label color=\"blue\">Hyperloop Network</Label>}\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t\t<Grid.Row\r\n\t\t\t\t\t\tverticalAlign=\"middle\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(38, 35, 35, 0.5)',\r\n\t\t\t\t\t\t\tborderBottom: '1px groove',\r\n\t\t\t\t\t\t\tborderTop: '1px groove'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tcentered\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid.Column width={16} textAlign=\"center\" style={{ paddingBottom: '8px' }}>\r\n\t\t\t\t\t\t\t<Header inverted>Wild Life Catalog</Header>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t{location.animals.map(({ name, id }) => (\r\n\t\t\t\t\t\t\t<Grid.Column width={3} key={id}>\r\n\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\tcentered\r\n\t\t\t\t\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\t\t\t\t\tsrc={getImageSrc(`/animals/${name}`)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t\t<Grid.Row\r\n\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tpadding: '5rem',\r\n\t\t\t\t\t\t\tpaddingTop: '10px',\r\n\t\t\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(255, 250, 250, 0.9)',\r\n\t\t\t\t\t\t\tmarginLeft: 0\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{location.drops.map(({ name, id, quantity }) => (\r\n\t\t\t\t\t\t\t<ItemModalButton id={id} key={id} label={quantity} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Segment>\r\n\t\t</LocationView>\r\n\t);\r\n};\r\n","C:\\Projects\\erbs\\packages\\ui\\src\\views\\wiki\\children\\armorPage.component.tsx",["212","213"],"import { Armors } from 'erbs-sdk';\r\nimport React, { useState } from 'react';\r\nimport { Button, Container, Menu } from 'semantic-ui-react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { getItemList } from '../../../utilities/getList';\r\nimport { ItemSearchComponent } from './ItemSearch.component';\r\n\r\nexport const ArmorPage = () => {\r\n\tconst history = useHistory();\r\n\tconst { id } = useParams() as any;\r\n\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<Menu\r\n\t\t\t\tclassName=\"attached\"\r\n\t\t\t\tcolor=\"red\"\r\n\t\t\t\tinverted\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\tmarginBottom: 0,\r\n\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{Object.values(Armors).map((armor) => (\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tkey={armor}\r\n\t\t\t\t\t\tactive={id === armor}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\thistory.push(`/wiki/armors/${armor}`);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborderRadius: 0\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{armor}\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t))}\r\n\t\t\t</Menu>\r\n\r\n\t\t\t<ItemSearchComponent\r\n\t\t\t\tpath={`/wiki/armors`}\r\n\t\t\t\titems={getItemList(id)}\r\n\t\t\t\ttitle={`${id || 'Armor'} Options`}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t);\r\n};\r\n","C:\\Projects\\erbs\\packages\\ui\\src\\views\\wiki\\children\\weaponPage.component.tsx",["214"],"import { Item, WeaponsLookup, WeaponType } from 'erbs-sdk';\r\nimport React, { useState } from 'react';\r\nimport {\r\n\tButton,\r\n\tImage,\r\n\tSegment,\r\n\tContainer,\r\n\tGrid,\r\n\tHeader,\r\n\tStatistic,\r\n\tTransitionGroup\r\n} from 'semantic-ui-react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { getImageSrc } from '../../../utilities/getImageSrc';\r\nimport CharacterThumbnailComponent from '../../../components/characterThumbnail.component';\r\nimport { ItemModalButton } from '../../../components/itemModalButton.component';\r\nimport { ItemCardComponent } from '../../../components/itemCard.component';\r\nimport { getItemList } from '../../../utilities/getList';\r\nimport { Types } from '../../../utilities/types';\r\nimport { ItemSearchComponent } from './ItemSearch.component';\r\nimport { BG_HALF } from '../../../utilities/bgImages';\r\n\r\nexport const WeaponPage = () => {\r\n\tconst history = useHistory();\r\n\tconst { id } = useParams() as any;\r\n\tconst weaponType = id ? new WeaponType(id) : null;\r\n\r\n\tconst [ selectedItem, setSelectedItem ] = useState(null);\r\n\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackgroundColor: 'rgba(200, 49, 50, 0.9)',\r\n\t\t\t\t\tpadding: '2px',\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tflexFlow: 'row wrap',\r\n\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{Object.keys(WeaponsLookup).filter((wpn) => wpn !== 'Whip').map((wpn) => (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tkey={wpn}\r\n\t\t\t\t\t\tas={Link}\r\n\t\t\t\t\t\tto={`/wiki/weapons/${wpn}`}\r\n\t\t\t\t\t\tcompact\r\n\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\tboxShadow: '0 0 0 1px rgba(255, 255, 255, 0.5)',\r\n\t\t\t\t\t\t\tborderRadius: 0\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Image bordered size=\"mini\" src={getImageSrc(`${WeaponsLookup[wpn]}s`)} />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\r\n\t\t\t{id && (\r\n\t\t\t\t<Segment\r\n\t\t\t\t\tcolor=\"black\"\r\n\t\t\t\t\tfluid\r\n\t\t\t\t\tinverted\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\tmarginTop: 12,\r\n\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\tborderRadius: 0\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid centered>\r\n\t\t\t\t\t\t<Grid.Row\r\n\t\t\t\t\t\t\tverticalAlign=\"middle\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(76, 70, 70, 1)',\r\n\t\t\t\t\t\t\t\tborderBottom: '1px groove',\r\n\t\t\t\t\t\t\t\tborderTop: '1px groove'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tcentered\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid.Column width={2} textAlign=\"center\">\r\n\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\tcentered\r\n\t\t\t\t\t\t\t\t\tbordered\r\n\t\t\t\t\t\t\t\t\tsrc={getImageSrc(`/weaponSkills/${WeaponsLookup[id]}`)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t\t<Grid.Column width={2} textAlign=\"center\">\r\n\t\t\t\t\t\t\t\t<Header inverted textAlign=\"center\">\r\n\t\t\t\t\t\t\t\t\t{id}\r\n\t\t\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t\t<Grid.Column width={Math.min(weaponType.usableBy.length + 2, 8) as any}>\r\n\t\t\t\t\t\t\t\t<div style={{ display: 'flex', flexFlow: 'row wrap' }}>\r\n\t\t\t\t\t\t\t\t\t{weaponType.usableBy.map((char) => (\r\n\t\t\t\t\t\t\t\t\t\t<div key={char}>\r\n\t\t\t\t\t\t\t\t\t\t\t<CharacterThumbnailComponent\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push(`/wiki/characters/${char}`)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisActive={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={char}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t\t\t{weaponType.abilityDetails &&\r\n\t\t\t\t\t\tweaponType.abilityDetails.name && (\r\n\t\t\t\t\t\t\t<Grid.Row\r\n\t\t\t\t\t\t\t\tverticalAlign=\"middle\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(38, 35, 35, 0.5)',\r\n\t\t\t\t\t\t\t\t\tborderBottom: '1px groove',\r\n\t\t\t\t\t\t\t\t\tborderTop: '1px groove'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tcentered\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Grid.Column width={16} textAlign=\"center\">\r\n\t\t\t\t\t\t\t\t\t<Header inverted as=\"h1\">\r\n\t\t\t\t\t\t\t\t\t\t{weaponType.abilityDetails.name.replace(/_/g, ' ')}\r\n\t\t\t\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t\t\t<Grid.Column width={16} textAlign=\"center\">\r\n\t\t\t\t\t\t\t\t\t{weaponType.abilityDetails.description}\r\n\t\t\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t\t\t<Grid.Column\r\n\t\t\t\t\t\t\t\t\twidth={12}\r\n\t\t\t\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ paddingTop: '2rem' }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Statistic.Group\r\n\t\t\t\t\t\t\t\t\t\tsize={'mini'}\r\n\t\t\t\t\t\t\t\t\t\twidths=\"three\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\t\t\t\t\titems={weaponType.abilityDetails.info.map(\r\n\t\t\t\t\t\t\t\t\t\t\t({ title, value }) => ({\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey: title,\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: title\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<Grid.Row\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(255, 250, 250, 0.9)',\r\n\t\t\t\t\t\t\t\tpaddingTop: 0,\r\n\t\t\t\t\t\t\t\tbackgroundImage: BG_HALF\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tcentered\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\t\t\tstyle={{ borderRadius: 0 }}\r\n\t\t\t\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t\t\t\t\tsecondary\r\n\t\t\t\t\t\t\t\t\traised\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Header color=\"orange\">Weapon Options</Header>\r\n\t\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t\t{selectedItem && (\r\n\t\t\t\t\t\t\t\t<Grid.Column width={4} style={{ marginRight: 0, paddingRight: 0 }}>\r\n\t\t\t\t\t\t\t\t\t<ItemCardComponent item={new Item(selectedItem)} />\r\n\t\t\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Grid.Column\r\n\t\t\t\t\t\t\t\twidth={selectedItem ? 6 : 12}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tpaddingTop: 10,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(36, 30, 30, 0.1)',\r\n\t\t\t\t\t\t\t\t\tmarginLeft: 0\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{weaponType.items.map(({ id }) => (\r\n\t\t\t\t\t\t\t\t\t<ItemModalButton\r\n\t\t\t\t\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\t\t\t\t\tid={id}\r\n\t\t\t\t\t\t\t\t\t\taction={(id) => setSelectedItem(id)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Segment>\r\n\t\t\t)}\r\n\r\n\t\t\t{!id && (\r\n\t\t\t\t<ItemSearchComponent\r\n\t\t\t\t\tsetSelectedItem={(id, item) => {\r\n\t\t\t\t\t\thistory.push(`/wiki/weapons/${item.clientType}`);\r\n\t\t\t\t\t\tsetSelectedItem(id);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\titems={getItemList(Types.Weapon)}\r\n\t\t\t\t\ttitle=\"Weapon Options\"\r\n\t\t\t\t\tpath=\"/wiki/weapons\"\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n","C:\\Projects\\erbs\\packages\\ui\\src\\views\\wiki\\children\\ItemSearch.component.tsx",["215","216"],"import { Item } from 'erbs-sdk';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n\tGrid,\r\n\tHeader,\r\n\tInput,\r\n\tSearch,\r\n\tSegment,\r\n\tTransition,\r\n\tTransitionGroup\r\n} from 'semantic-ui-react';\r\nimport { ItemCardComponent } from '../../../components/itemCard.component';\r\nimport { ItemModalButton } from '../../../components/itemModalButton.component';\r\nimport { BG_HALF } from '../../../utilities/bgImages';\r\n\r\ntype Props = {\r\n\tsetSelectedItem?: any;\r\n\titems: Item[];\r\n\tpath?: string;\r\n\tselectedItem?: any;\r\n\ttitle: string;\r\n};\r\n\r\nexport const ItemSearchComponent: React.FC<Props> = ({\r\n\tsetSelectedItem,\r\n\tselectedItem,\r\n\titems,\r\n\ttitle,\r\n\tpath\r\n}) => {\r\n\tconst history = useHistory();\r\n\tconst [ searchString, updateSearchString ] = useState(null);\r\n\tconst [ localItem, setLocalItem ] = useState(null);\r\n\r\n\tconst handleSearchChange = (e, { value }) => {\r\n\t\tconsole.log('[search]', e, value);\r\n\t\tif (value && value.length > 3) {\r\n\t\t\tupdateSearchString(value.toLowerCase());\r\n\t\t} else if (!value) {\r\n\t\t\tupdateSearchString(null);\r\n\t\t}\r\n\t};\r\n\r\n\tconst updateSelected = (id, item) => {\r\n\t\tif (setSelectedItem) {\r\n\t\t\tsetSelectedItem(id, item);\r\n\t\t} else {\r\n\t\t\tsetLocalItem(id);\r\n\t\t}\r\n\t};\r\n\r\n\tconst realSelectedItem = selectedItem || localItem;\r\n\r\n\treturn (\r\n\t\t<Grid style={{}}>\r\n\t\t\t<Grid.Row\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\tmarginBottom: 0,\r\n\t\t\t\t\tpaddingBottom: 0\r\n\t\t\t\t}}\r\n\t\t\t\ttextAlign=\"center\"\r\n\t\t\t>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t<Segment\r\n\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\tstacked\r\n\t\t\t\t\t\traised\r\n\t\t\t\t\t\tsecondary\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborderRadius: 0\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tlabel={{ content: title, color: 'orange' }}\r\n\t\t\t\t\t\t\tinline\r\n\t\t\t\t\t\t\tplaceholder=\"Search Items\"\r\n\t\t\t\t\t\t\tonChange={handleSearchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid.Row>\r\n\t\t\t<Grid.Row\r\n\t\t\t\tfluid\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tpadding: '5rem',\r\n\t\t\t\t\tpaddingTop: '10px',\r\n\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\tbackgroundColor: 'rgba(255, 250, 250, 0.9)',\r\n\t\t\t\t\tmarginLeft: 0,\r\n\t\t\t\t\tbackgroundImage: BG_HALF\r\n\t\t\t\t}}\r\n\t\t\t\ttextAlign=\"center\"\r\n\t\t\t>\r\n\t\t\t\t{realSelectedItem && (\r\n\t\t\t\t\t<Grid.Column width={6} style={{ marginRight: 0, paddingRight: 0 }}>\r\n\t\t\t\t\t\t<Transition>\r\n\t\t\t\t\t\t\t<ItemCardComponent item={new Item(realSelectedItem)} />\r\n\t\t\t\t\t\t</Transition>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t)}\r\n\t\t\t\t<Grid.Column\r\n\t\t\t\t\twidth={realSelectedItem ? 10 : 16}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tpaddingTop: 10,\r\n\t\t\t\t\t\tmarginLeft: 0\r\n\t\t\t\t\t}}\r\n\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<TransitionGroup duration={100} animation=\"fade\">\r\n\t\t\t\t\t\t{items\r\n\t\t\t\t\t\t\t.filter((item) => {\r\n\t\t\t\t\t\t\t\tif (!searchString) {\r\n\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\titem.name.toLowerCase().includes(searchString) ||\r\n\t\t\t\t\t\t\t\t\titem.displayName.toLowerCase().includes(searchString)\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.map((item) => (\r\n\t\t\t\t\t\t\t\t<ItemModalButton\r\n\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\tid={item.id}\r\n\t\t\t\t\t\t\t\t\taction={() => {\r\n\t\t\t\t\t\t\t\t\t\tif (path) {\r\n\t\t\t\t\t\t\t\t\t\t\thistory.push(`${path}/${item.clientType}`);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tupdateSelected(item.id, item);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</TransitionGroup>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid.Row>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","C:\\Projects\\erbs\\packages\\ui\\src\\views\\wiki\\children\\characterStatTable.component.tsx",[],"C:\\Projects\\erbs\\packages\\ui\\src\\views\\players\\index.tsx",["217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240"],"import { Armors, CharactersLookup, Locations, Weapons } from 'erbs-sdk';\r\nimport React, { PureComponent, useState } from 'react';\r\nimport { Segment, Menu, Grid, List, Label, Header } from 'semantic-ui-react';\r\nimport { Link, Route, Switch, useHistory, useLocation, useRouteMatch } from 'react-router-dom';\r\nimport { PageComponent } from '../../components/page';\r\nimport { Characters } from 'erbs-data';\r\nimport { CharacterLandingPage, CharacterPage } from '../wiki/children/characterPage.component';\r\nimport { WeaponPage } from '../wiki/children/weaponPage.component';\r\nimport { ArmorPage } from '../wiki/children/armorPage.component';\r\nimport { ItemPage } from '../wiki/children/itemPage.component';\r\nimport { LocationLandingPage, LocationPage } from '../wiki/children/locationPage.component';\r\nimport { BG_HALF, BG_THIRD } from '../../utilities/bgImages';\r\nimport { DefaultPlayerData } from '../../utilities/playerData';\r\nimport { CharacterPortrait } from '../../components/characterPortrait.component';\r\n\r\nconst reverseCharLookup = Object.fromEntries(\r\n\tObject.entries(CharactersLookup).map(([ k, v ]) => [ v, k ])\r\n);\r\n\r\nconst PlayerView = () => {\r\n\tconst location = useLocation();\r\n\tconst { path, url } = useRouteMatch();\r\n\tconst [ activeSeason, setSeason ] = useState(0);\r\n\r\n\tconst charsPlayed = DefaultPlayerData.map(({ characterStats }) =>\r\n\t\tcharacterStats.map(({ characterCode, totalGames }) => [ characterCode, totalGames ])\r\n\t)\r\n\t\t.reduce(\r\n\t\t\t(total, vals) => {\r\n\t\t\t\tconst data = Object.fromEntries(total);\r\n\r\n\t\t\t\tvals.map(([ code, count ]) => {\r\n\t\t\t\t\tif (data[code]) {\r\n\t\t\t\t\t\tdata[code] = data[code] + count;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdata[code] = count;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn Object.entries(data);\r\n\t\t\t},\r\n\t\t\t[] as any\r\n\t\t)\r\n\t\t.sort((a, b) => b[1] - a[1]);\r\n\r\n\treturn (\r\n\t\t<PageComponent title=\"Eternal Return: Black Survival Test Subject Records\">\r\n\t\t\t<Segment\r\n\t\t\t\tcolor=\"black\"\r\n\t\t\t\tfluid\r\n\t\t\t\tinverted\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\tmarginTop: 12,\r\n\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\tborderRadius: 0\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Grid style={{ backgroundImage: BG_HALF }} centered>\r\n\t\t\t\t\t<Grid.Row\r\n\t\t\t\t\t\tstretched\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(76, 70, 70, 1)',\r\n\t\t\t\t\t\t\tbackgroundImage: BG_THIRD,\r\n\t\t\t\t\t\t\tborderBottom: '1px groove',\r\n\t\t\t\t\t\t\tborderTop: '1px groove'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tcentered\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid.Column width={1} stretched mobile={6} tablet={4} computer={2}>\r\n\t\t\t\t\t\t\t<CharacterPortrait\r\n\t\t\t\t\t\t\t\ttype=\"half\"\r\n\t\t\t\t\t\t\t\twidth={125}\r\n\t\t\t\t\t\t\t\tname={reverseCharLookup[charsPlayed[0][0]]}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t<Grid.Column\r\n\t\t\t\t\t\t\twidth={3}\r\n\t\t\t\t\t\t\tstyle={{ paddingLeft: 0 }}\r\n\t\t\t\t\t\t\ttablet={6}\r\n\t\t\t\t\t\t\tmobile={8}\r\n\t\t\t\t\t\t\tcomputer={3}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t\t\t<Grid.Row\r\n\t\t\t\t\t\t\t\t\tstretched\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tpaddingLeft: '1rem',\r\n\t\t\t\t\t\t\t\t\t\tpaddingTop: 25,\r\n\t\t\t\t\t\t\t\t\t\tpaddingBottom: 0\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Header inverted as=\"h1\">\r\n\t\t\t\t\t\t\t\t\t\tPaul Endri\r\n\t\t\t\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t\t\t\t\t<Grid.Row\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tpaddingLeft: '1.5rem',\r\n\t\t\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t\t\t\tmargin: 0\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{activeSeason ? `Season ${activeSeason}` : 'Offseason'}\r\n\t\t\t\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t\t\t\t\t<Grid.Row style={{ marginTop: 0, paddingTop: 0 }}>\r\n\t\t\t\t\t\t\t\t\t{charsPlayed.slice(1, 3).map(([ c ]) => (\r\n\t\t\t\t\t\t\t\t\t\t<Grid.Column tablet={8} mobile={8} computer={4} key={c}>\r\n\t\t\t\t\t\t\t\t\t\t\t<CharacterPortrait\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth={75}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"mini\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={reverseCharLookup[c]}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Segment>\r\n\t\t</PageComponent>\r\n\t);\r\n};\r\n\r\nexport default PlayerView;\r\n","C:\\Projects\\erbs\\packages\\ui\\src\\utilities\\playerData.ts",[],{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":1,"column":10,"nodeType":"247","messageId":"248","endLine":1,"endColumn":20},{"ruleId":"245","severity":1,"message":"249","line":1,"column":28,"nodeType":"247","messageId":"248","endLine":1,"endColumn":35},{"ruleId":"245","severity":1,"message":"250","line":1,"column":37,"nodeType":"247","messageId":"248","endLine":1,"endColumn":50},{"ruleId":"245","severity":1,"message":"251","line":2,"column":17,"nodeType":"247","messageId":"248","endLine":2,"endColumn":30},{"ruleId":"245","severity":1,"message":"252","line":4,"column":2,"nodeType":"247","messageId":"248","endLine":4,"endColumn":8},{"ruleId":"245","severity":1,"message":"253","line":5,"column":2,"nodeType":"247","messageId":"248","endLine":5,"endColumn":6},{"ruleId":"245","severity":1,"message":"254","line":6,"column":2,"nodeType":"247","messageId":"248","endLine":6,"endColumn":7},{"ruleId":"245","severity":1,"message":"255","line":7,"column":2,"nodeType":"247","messageId":"248","endLine":7,"endColumn":6},{"ruleId":"245","severity":1,"message":"256","line":8,"column":2,"nodeType":"247","messageId":"248","endLine":8,"endColumn":7},{"ruleId":"245","severity":1,"message":"257","line":12,"column":2,"nodeType":"247","messageId":"248","endLine":12,"endColumn":8},{"ruleId":"258","severity":1,"message":"259","line":62,"column":6,"nodeType":"260","endLine":62,"endColumn":76},{"ruleId":"258","severity":1,"message":"259","line":139,"column":12,"nodeType":"260","endLine":139,"endColumn":47},{"ruleId":"245","severity":1,"message":"256","line":2,"column":25,"nodeType":"247","messageId":"248","endLine":2,"endColumn":30},{"ruleId":"245","severity":1,"message":"261","line":2,"column":32,"nodeType":"247","messageId":"248","endLine":2,"endColumn":39},{"ruleId":"258","severity":1,"message":"259","line":66,"column":6,"nodeType":"260","endLine":76,"endColumn":8},{"ruleId":"245","severity":1,"message":"251","line":2,"column":17,"nodeType":"247","messageId":"248","endLine":2,"endColumn":30},{"ruleId":"245","severity":1,"message":"262","line":2,"column":32,"nodeType":"247","messageId":"248","endLine":2,"endColumn":40},{"ruleId":"245","severity":1,"message":"263","line":3,"column":25,"nodeType":"247","messageId":"248","endLine":3,"endColumn":29},{"ruleId":"245","severity":1,"message":"255","line":3,"column":31,"nodeType":"247","messageId":"248","endLine":3,"endColumn":35},{"ruleId":"245","severity":1,"message":"264","line":33,"column":16,"nodeType":"247","messageId":"248","endLine":33,"endColumn":19},{"ruleId":"245","severity":1,"message":"265","line":34,"column":8,"nodeType":"247","messageId":"248","endLine":34,"endColumn":15},{"ruleId":"245","severity":1,"message":"266","line":3,"column":10,"nodeType":"247","messageId":"248","endLine":3,"endColumn":18},{"ruleId":"245","severity":1,"message":"267","line":3,"column":10,"nodeType":"247","messageId":"248","endLine":3,"endColumn":14},{"ruleId":"245","severity":1,"message":"268","line":3,"column":16,"nodeType":"247","messageId":"248","endLine":3,"endColumn":27},{"ruleId":"241","replacedBy":"269"},{"ruleId":"243","replacedBy":"270"},{"ruleId":"258","severity":1,"message":"259","line":197,"column":15,"nodeType":"260","endLine":197,"endColumn":50},{"ruleId":"245","severity":1,"message":"256","line":2,"column":60,"nodeType":"247","messageId":"248","endLine":2,"endColumn":65},{"ruleId":"245","severity":1,"message":"271","line":8,"column":16,"nodeType":"247","messageId":"248","endLine":8,"endColumn":23},{"ruleId":"245","severity":1,"message":"272","line":29,"column":10,"nodeType":"247","messageId":"248","endLine":29,"endColumn":17},{"ruleId":"245","severity":1,"message":"261","line":2,"column":31,"nodeType":"247","messageId":"248","endLine":2,"endColumn":38},{"ruleId":"245","severity":1,"message":"273","line":1,"column":45,"nodeType":"247","messageId":"248","endLine":1,"endColumn":49},{"ruleId":"245","severity":1,"message":"274","line":7,"column":2,"nodeType":"247","messageId":"248","endLine":7,"endColumn":21},{"ruleId":"245","severity":1,"message":"275","line":11,"column":2,"nodeType":"247","messageId":"248","endLine":11,"endColumn":17},{"ruleId":"245","severity":1,"message":"252","line":2,"column":10,"nodeType":"247","messageId":"248","endLine":2,"endColumn":16},{"ruleId":"245","severity":1,"message":"276","line":14,"column":10,"nodeType":"247","messageId":"248","endLine":14,"endColumn":21},{"ruleId":"245","severity":1,"message":"277","line":14,"column":23,"nodeType":"247","messageId":"248","endLine":14,"endColumn":38},{"ruleId":"245","severity":1,"message":"278","line":15,"column":10,"nodeType":"247","messageId":"248","endLine":15,"endColumn":29},{"ruleId":"245","severity":1,"message":"279","line":16,"column":10,"nodeType":"247","messageId":"248","endLine":16,"endColumn":25},{"ruleId":"245","severity":1,"message":"280","line":16,"column":27,"nodeType":"247","messageId":"248","endLine":16,"endColumn":33},{"ruleId":"245","severity":1,"message":"262","line":2,"column":17,"nodeType":"247","messageId":"248","endLine":2,"endColumn":25},{"ruleId":"245","severity":1,"message":"252","line":3,"column":10,"nodeType":"247","messageId":"248","endLine":3,"endColumn":16},{"ruleId":"245","severity":1,"message":"281","line":11,"column":2,"nodeType":"247","messageId":"248","endLine":11,"endColumn":17},{"ruleId":"245","severity":1,"message":"257","line":6,"column":2,"nodeType":"247","messageId":"248","endLine":6,"endColumn":8},{"ruleId":"245","severity":1,"message":"282","line":8,"column":2,"nodeType":"247","messageId":"248","endLine":8,"endColumn":8},{"ruleId":"245","severity":1,"message":"283","line":1,"column":10,"nodeType":"247","messageId":"248","endLine":1,"endColumn":16},{"ruleId":"245","severity":1,"message":"284","line":1,"column":36,"nodeType":"247","messageId":"248","endLine":1,"endColumn":45},{"ruleId":"245","severity":1,"message":"271","line":1,"column":47,"nodeType":"247","messageId":"248","endLine":1,"endColumn":54},{"ruleId":"245","severity":1,"message":"251","line":2,"column":17,"nodeType":"247","messageId":"248","endLine":2,"endColumn":30},{"ruleId":"245","severity":1,"message":"285","line":3,"column":19,"nodeType":"247","messageId":"248","endLine":3,"endColumn":23},{"ruleId":"245","severity":1,"message":"255","line":3,"column":31,"nodeType":"247","messageId":"248","endLine":3,"endColumn":35},{"ruleId":"245","severity":1,"message":"256","line":3,"column":37,"nodeType":"247","messageId":"248","endLine":3,"endColumn":42},{"ruleId":"245","severity":1,"message":"267","line":4,"column":10,"nodeType":"247","messageId":"248","endLine":4,"endColumn":14},{"ruleId":"245","severity":1,"message":"286","line":4,"column":16,"nodeType":"247","messageId":"248","endLine":4,"endColumn":21},{"ruleId":"245","severity":1,"message":"287","line":4,"column":23,"nodeType":"247","messageId":"248","endLine":4,"endColumn":29},{"ruleId":"245","severity":1,"message":"288","line":4,"column":31,"nodeType":"247","messageId":"248","endLine":4,"endColumn":41},{"ruleId":"245","severity":1,"message":"289","line":6,"column":10,"nodeType":"247","messageId":"248","endLine":6,"endColumn":20},{"ruleId":"245","severity":1,"message":"290","line":7,"column":10,"nodeType":"247","messageId":"248","endLine":7,"endColumn":30},{"ruleId":"245","severity":1,"message":"291","line":7,"column":32,"nodeType":"247","messageId":"248","endLine":7,"endColumn":45},{"ruleId":"245","severity":1,"message":"292","line":8,"column":10,"nodeType":"247","messageId":"248","endLine":8,"endColumn":20},{"ruleId":"245","severity":1,"message":"293","line":9,"column":10,"nodeType":"247","messageId":"248","endLine":9,"endColumn":19},{"ruleId":"245","severity":1,"message":"294","line":10,"column":10,"nodeType":"247","messageId":"248","endLine":10,"endColumn":18},{"ruleId":"245","severity":1,"message":"295","line":11,"column":10,"nodeType":"247","messageId":"248","endLine":11,"endColumn":29},{"ruleId":"245","severity":1,"message":"296","line":11,"column":31,"nodeType":"247","messageId":"248","endLine":11,"endColumn":43},{"ruleId":"245","severity":1,"message":"297","line":21,"column":8,"nodeType":"247","messageId":"248","endLine":21,"endColumn":16},{"ruleId":"245","severity":1,"message":"298","line":22,"column":10,"nodeType":"247","messageId":"248","endLine":22,"endColumn":14},{"ruleId":"245","severity":1,"message":"264","line":22,"column":16,"nodeType":"247","messageId":"248","endLine":22,"endColumn":19},{"ruleId":"245","severity":1,"message":"299","line":23,"column":24,"nodeType":"247","messageId":"248","endLine":23,"endColumn":33},{"ruleId":"300","severity":1,"message":"301","line":32,"column":32,"nodeType":"302","messageId":"303","endLine":32,"endColumn":34},"no-native-reassign",["304"],"no-negated-in-lhs",["305"],"@typescript-eslint/no-unused-vars","'Categories' is defined but never used.","Identifier","unusedVar","'Loadout' is defined but never used.","'WeaponsLookup' is defined but never used.","'PureComponent' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'Image' is defined but never used.","'List' is defined but never used.","'Label' is defined but never used.","'Header' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Segment' is defined but never used.","'useState' is defined but never used.","'Grid' is defined but never used.","'url' is assigned a value but never used.","'history' is assigned a value but never used.","'BG_THIRD' is defined but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.",["304"],["305"],"'Weapons' is defined but never used.","'setItem' is assigned a value but never used.","'Item' is defined but never used.","'ResponsiveContainer' is defined but never used.","'PolarRadiusAxis' is defined but never used.","'getMiscList' is defined but never used.","'getMiscListKeys' is defined but never used.","'ItemSearchComponent' is defined but never used.","'LocationsLookup' is defined but never used.","'Region' is defined but never used.","'TransitionGroup' is defined but never used.","'Search' is defined but never used.","'Armors' is defined but never used.","'Locations' is defined but never used.","'Menu' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'useHistory' is defined but never used.","'Characters' is defined but never used.","'CharacterLandingPage' is defined but never used.","'CharacterPage' is defined but never used.","'WeaponPage' is defined but never used.","'ArmorPage' is defined but never used.","'ItemPage' is defined but never used.","'LocationLandingPage' is defined but never used.","'LocationPage' is defined but never used.","'location' is assigned a value but never used.","'path' is assigned a value but never used.","'setSeason' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]