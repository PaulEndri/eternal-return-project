[{"C:\\Projects\\erbs\\ui\\src\\index.tsx":"1","C:\\Projects\\erbs\\ui\\src\\reportWebVitals.ts":"2","C:\\Projects\\erbs\\ui\\src\\App.tsx":"3","C:\\Projects\\erbs\\ui\\src\\components\\layout\\index.tsx":"4","C:\\Projects\\erbs\\ui\\src\\utilities\\getImageSrc.ts":"5","C:\\Projects\\erbs\\ui\\src\\views\\planner\\index.tsx":"6","C:\\Projects\\erbs\\ui\\src\\utilities\\rarityColor.ts":"7","C:\\Projects\\erbs\\ui\\src\\components\\itemCard.component.tsx":"8","C:\\Projects\\erbs\\ui\\src\\components\\characterThumbnail.component.tsx":"9","C:\\Projects\\erbs\\ui\\src\\components\\loadOutItem.component.tsx":"10","C:\\Projects\\erbs\\ui\\src\\utilities\\Types.tsx":"11","C:\\Projects\\erbs\\ui\\src\\utilities\\types.tsx":"12","C:\\Projects\\erbs\\ui\\src\\utilities\\getList.tsx":"13","C:\\Projects\\erbs\\ui\\src\\components\\equipmentFilter.component.tsx":"14","C:\\Projects\\erbs\\ui\\src\\components\\characterCard.component.tsx":"15","C:\\Projects\\erbs\\ui\\src\\components\\desktopLoadout.component.tsx":"16","C:\\Projects\\erbs\\ui\\src\\data\\Weapons.ts":"17","C:\\Projects\\erbs\\ui\\src\\components\\characterPane.component.tsx":"18","C:\\Projects\\erbs\\ui\\src\\components\\equipmentPane.component.tsx":"19","C:\\Projects\\erbs\\ui\\src\\components\\routePane.component.tsx":"20","C:\\Projects\\erbs\\ui\\src\\state\\itemModal\\index.tsx":"21","C:\\Projects\\erbs\\ui\\src\\components\\itemModal.component.tsx":"22","C:\\Projects\\erbs\\ui\\src\\components\\itemModalButton.component.tsx":"23"},{"size":517,"mtime":1608150420164,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":628,"mtime":1609089899811,"results":"27","hashOfConfig":"25"},{"size":829,"mtime":1609099764174,"results":"28","hashOfConfig":"25"},{"size":93,"mtime":1608005385911,"results":"29","hashOfConfig":"25"},{"size":3736,"mtime":1609313684157,"results":"30","hashOfConfig":"25"},{"size":297,"mtime":1609058312569,"results":"31","hashOfConfig":"25"},{"size":3334,"mtime":1609092077459,"results":"32","hashOfConfig":"25"},{"size":2943,"mtime":1608961564841,"results":"33","hashOfConfig":"25"},{"size":787,"mtime":1609091736595,"results":"34","hashOfConfig":"25"},{"size":137,"mtime":1608140821867,"results":"35","hashOfConfig":"25"},{"size":137,"mtime":1608140821867,"results":"36","hashOfConfig":"25"},{"size":890,"mtime":1608863354192,"results":"37","hashOfConfig":"25"},{"size":3254,"mtime":1609313684157,"results":"38","hashOfConfig":"25"},{"size":2575,"mtime":1609353236896,"results":"39","hashOfConfig":"25"},{"size":2938,"mtime":1609091493785,"results":"40","hashOfConfig":"25"},{"size":536676,"mtime":1608950516928,"results":"41","hashOfConfig":"25"},{"size":1753,"mtime":1609091369024,"results":"42","hashOfConfig":"25"},{"size":5166,"mtime":1609091773155,"results":"43","hashOfConfig":"25"},{"size":7027,"mtime":1609099873133,"results":"44","hashOfConfig":"25"},{"size":1225,"mtime":1609090982894,"results":"45","hashOfConfig":"25"},{"size":1372,"mtime":1609091023235,"results":"46","hashOfConfig":"25"},{"size":773,"mtime":1609092075555,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"mvmb7e",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Projects\\erbs\\ui\\src\\index.tsx",[],["102","103"],"C:\\Projects\\erbs\\ui\\src\\reportWebVitals.ts",[],"C:\\Projects\\erbs\\ui\\src\\App.tsx",[],"C:\\Projects\\erbs\\ui\\src\\components\\layout\\index.tsx",[],"C:\\Projects\\erbs\\ui\\src\\utilities\\getImageSrc.ts",[],"C:\\Projects\\erbs\\ui\\src\\views\\planner\\index.tsx",["104","105","106","107","108","109","110","111"],"import { Item, Loadout, Weapon } from 'erbs-sdk';\r\nimport React, { PureComponent, useState } from 'react';\r\nimport {\r\n\tButton,\r\n\tCard,\r\n\tImage,\r\n\tList,\r\n\tLabel,\r\n\tSegment,\r\n\tGrid,\r\n\tContainer,\r\n\tHeader,\r\n\tTab\r\n} from 'semantic-ui-react';\r\nimport { Types } from '../../utilities/types';\r\nimport { DesktopLoadoutComponent } from '../../components/desktopLoadout.component';\r\nimport { CharacterPane } from '../../components/characterPane.component';\r\nimport { EquipmentPaneComponent } from '../../components/equipmentPane.component';\r\nimport { RoutePaneComponent } from '../../components/routePane.component';\r\n\r\nexport const getLoadoutType = (item) => (item instanceof Weapon ? Types.Weapon : item.type);\r\n\r\nexport const initialLoadout = {\r\n\tWeapon: null,\r\n\tChest: null,\r\n\tHead: null,\r\n\tArm: null,\r\n\tLeg: null,\r\n\tAccessory: null\r\n};\r\n\r\nconst PlannerView = () => {\r\n\tconst [ selectedItem, setSelectedItem ] = useState(null);\r\n\tconst [ selectedRadio, setSelectedRadio ] = useState(null);\r\n\tconst [ selectedType, setSelectedType ] = useState(null);\r\n\tconst [ selectedWeaponType, setSelectedWeaponType ] = useState(null);\r\n\tconst [ selectedCharacter, setSelectedCharacter ] = useState(null);\r\n\tconst [ viewingCharacter, setViewingCharacter ] = useState(null);\r\n\r\n\tconst [ loadout, setLoadout ] = useState(Loadout.GenerateLoadout(initialLoadout));\r\n\r\n\tconst updateState = (slot, item) => {\r\n\t\tif (!slot) {\r\n\t\t\tsetLoadout(Loadout.GenerateLoadout(initialLoadout));\r\n\t\t} else {\r\n\t\t\tsetLoadout(loadout.setSlot(slot, item));\r\n\t\t}\r\n\t};\r\n\r\n\tconst onLoadoutItemClick = (item, type) => {\r\n\t\tsetSelectedType(item ? getLoadoutType(item) : type);\r\n\r\n\t\tif (item) {\r\n\t\t\tsetSelectedItem(item);\r\n\t\t} else {\r\n\t\t\tsetSelectedRadio(type);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onLookupItemClick = (item) => {\r\n\t\tsetSelectedType(getLoadoutType(item));\r\n\t\tsetSelectedItem(item);\r\n\t};\r\n\r\n\tconst addSelectedToLoadout = () => {\r\n\t\tupdateState(selectedType, selectedItem);\r\n\t};\r\n\r\n\tconst equipmentPaneProps = {\r\n\t\tselectedItem,\r\n\t\taddSelectedToLoadout,\r\n\t\tselectedRadio,\r\n\t\tselectedCharacter,\r\n\t\tselectedWeaponType,\r\n\t\tsetSelectedWeaponType,\r\n\t\tsetSelectedRadio,\r\n\t\tonLookupItemClick\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Segment basic style={{ padding: 0 }}>\r\n\t\t\t<Segment\r\n\t\t\t\tinverted\r\n\t\t\t\tcolor=\"orange\"\r\n\t\t\t\traised\r\n\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\tpadded={false}\r\n\t\t\t\tbasic\r\n\t\t\t\tstyle={{ marginBottom: 0, padding: 0 }}\r\n\t\t\t>\r\n\t\t\t\t<Header as=\"h2\">Loadout & Route Planner</Header>\r\n\t\t\t</Segment>\r\n\t\t\t<DesktopLoadoutComponent\r\n\t\t\t\tselectedCharacter={selectedCharacter}\r\n\t\t\t\tonLoadoutItemClick={onLoadoutItemClick}\r\n\t\t\t\tloadout={loadout}\r\n\t\t\t/>\r\n\t\t\t<Grid centered>\r\n\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t<Grid.Column width={12} style={{}}>\r\n\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tpadding: 1,\r\n\t\t\t\t\t\t\t\tpaddingTop: 0,\r\n\t\t\t\t\t\t\t\tborderTop: 0,\r\n\t\t\t\t\t\t\t\tbackgroundColor: 'rgb(51, 51, 51)'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Tab\r\n\t\t\t\t\t\t\t\tmenu={{ color: 'red', inverted: 'true', attached: true }}\r\n\t\t\t\t\t\t\t\tpanes={[\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tmenuItem: 'Character Selection',\r\n\t\t\t\t\t\t\t\t\t\trender: () => (\r\n\t\t\t\t\t\t\t\t\t\t\t<CharacterPane\r\n\t\t\t\t\t\t\t\t\t\t\t\tviewingCharacter={viewingCharacter}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedCharacter={setSelectedCharacter}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetViewingCharacter={setViewingCharacter}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tmenuItem: 'Equipment Selection',\r\n\t\t\t\t\t\t\t\t\t\trender: () => (\r\n\t\t\t\t\t\t\t\t\t\t\t<EquipmentPaneComponent {...equipmentPaneProps} />\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tmenuItem: 'Route Generation',\r\n\t\t\t\t\t\t\t\t\t\trender: () => <RoutePaneComponent loadout={loadout} />\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t</Grid>\r\n\t\t</Segment>\r\n\t);\r\n};\r\n\r\n// wp ch hea arm leg acc\r\n\r\n// q w e r d p\r\n\r\nexport default PlannerView;\r\n","C:\\Projects\\erbs\\ui\\src\\utilities\\rarityColor.ts",[],"C:\\Projects\\erbs\\ui\\src\\components\\itemCard.component.tsx",["112","113","114"],"import React, { FunctionComponent, useContext } from 'react';\r\nimport { Button, Header, Image, List, Label, Segment } from 'semantic-ui-react';\r\nimport { Item, IBasicItem } from 'erbs-sdk';\r\nimport { getImageSrc } from '../utilities/getImageSrc';\r\nimport { rarityColor } from '../utilities/rarityColor';\r\nimport { ItemModalContext } from '../state/itemModal';\r\nimport { ItemModalButton } from './itemModalButton.component';\r\n\r\ntype ItemCardProps = {\r\n\titem?: Item<string>;\r\n\taddSelectedToLoadout?: any;\r\n};\r\n\r\nexport const ItemCardComponent: FunctionComponent<ItemCardProps> = ({\r\n\titem,\r\n\taddSelectedToLoadout\r\n}) => {\r\n\tconst { setItem } = useContext(ItemModalContext);\r\n\r\n\treturn (\r\n\t\t<Segment.Group\r\n\t\t\tstyle={{\r\n\t\t\t\tborderRadius: 0,\r\n\t\t\t\tbackgroundColor: 'rgba(66, 64, 74, 0.2)'\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{item && (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<Segment basic compact textAlign=\"center\">\r\n\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\traised\r\n\t\t\t\t\t\t\tcolor={rarityColor(item.rarity)}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t// backgroundColor: '#877e8a',\r\n\t\t\t\t\t\t\t\tmargin: 'auto',\r\n\t\t\t\t\t\t\t\tmarginBottom: '10px',\r\n\t\t\t\t\t\t\t\tpadding: '1px',\r\n\t\t\t\t\t\t\t\tborder: '2px inset rgba(255, 190, 16, 0.45)',\r\n\r\n\t\t\t\t\t\t\t\toverflow: 'hidden'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\tfloated=\"right\"\r\n\t\t\t\t\t\t\t\tsrc={getImageSrc(item.name)}\r\n\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\tbordered\r\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: rarityColor(item.rarity) }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Segment>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor={rarityColor(item.rarity)}\r\n\t\t\t\t\t\t\tas=\"a\"\r\n\t\t\t\t\t\t\thref={`https://eternalreturn.gamepedia.com/${item.name}`}\r\n\t\t\t\t\t\t\tcontent={item.name}\r\n\t\t\t\t\t\t\tstyle={{ marginBottom: '5px' }}\r\n\t\t\t\t\t\t\tlabel={item.type}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<div style={{ color: 'white', fontStyle: 'italic' }}>\r\n\t\t\t\t\t\t\t{item.description}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t\t{item.stats && (\r\n\t\t\t\t\t\t<Segment inverted raised style={{ backgroundColor: 'transparent' }}>\r\n\t\t\t\t\t\t\t<Header>Stats</Header>\r\n\t\t\t\t\t\t\t<List items={item.stats} />\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{item.buildsFrom &&\r\n\t\t\t\t\titem.buildsFrom.length > 0 && (\r\n\t\t\t\t\t\t<Segment inverted style={{ backgroundColor: 'transparent' }}>\r\n\t\t\t\t\t\t\t<Header>Built From</Header>\r\n\t\t\t\t\t\t\t{item.buildsFrom.map(({ name }, idx) => (\r\n\t\t\t\t\t\t\t\t<ItemModalButton key={name + idx} name={name} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{item.buildsInto &&\r\n\t\t\t\t\tObject.entries(item.buildsInto).length > 0 && (\r\n\t\t\t\t\t\t<Segment inverted style={{ backgroundColor: 'transparent' }}>\r\n\t\t\t\t\t\t\t<Header>Builds Into</Header>\r\n\t\t\t\t\t\t\t{Object.keys(item.buildsInto).map((name, idx) => (\r\n\t\t\t\t\t\t\t\t<ItemModalButton key={name + idx} name={name} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{addSelectedToLoadout && (\r\n\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\tattached=\"top\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborder: 0,\r\n\t\t\t\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(0, 0, 0, 0.5)'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\traised\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={() => addSelectedToLoadout(item)}\r\n\t\t\t\t\t\t\t\tcontent={`Add ${item.name} to Loadout`}\r\n\t\t\t\t\t\t\t\tcolor=\"green\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t)}\r\n\t\t\t{!item && (\r\n\t\t\t\t<Segment\r\n\t\t\t\t\tattached=\"top\"\r\n\t\t\t\t\tbasic\r\n\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\tplaceholder\r\n\t\t\t\t\tinverted\r\n\t\t\t\t\tstyle={{ borderRadius: 0, border: 0 }}\r\n\t\t\t\t>\r\n\t\t\t\t\tNo Item Selected\r\n\t\t\t\t</Segment>\r\n\t\t\t)}\r\n\t\t</Segment.Group>\r\n\t);\r\n};\r\n","C:\\Projects\\erbs\\ui\\src\\components\\characterThumbnail.component.tsx",["115"],"import { FunctionComponent, useState } from 'react';\r\nimport { getImageSrc } from '../utilities/getImageSrc';\r\n\r\ninterface CharacterThumbnailProps {\r\n\tname: string;\r\n\tisActive: boolean;\r\n\tonClick?: Function;\r\n}\r\n\r\n/**\r\n * \r\nconst CharacterThumbnailComponent: FunctionComponent<CharacterThumbnailProps> = ({\r\n\tname,\r\n\tonClick\r\n}) => {\r\n\tconst [ hovering, setHovering ] = useState(false);\r\n\tconst parentStyle = {\r\n\t\toverflow: 'hidden',\r\n\t\theight: '100px',\r\n\t\twidth: '120px'\r\n\t};\r\n\r\n\tif (hovering && onClick) {\r\n\t\tObject.assign(parentStyle, {\r\n\t\t\tbackgroundColor: 'rgba(200, 200, 200, 0.9)',\r\n\t\t\tborder: '1px solid rgba(200, 200, 200, 1)'\r\n\t\t});\r\n\t} else {\r\n\t\tObject.assign(parentStyle, {\r\n\t\t\tbackgroundColor: 'rgba(200, 200, 200, 0.5)',\r\n\t\t\tborder: '1px solid rgba(200, 200, 200, 1)'\r\n\t\t});\r\n\t}\r\n\treturn (\r\n\t\t<div\r\n\t\t\tonMouseEnter={() => setHovering(true)}\r\n\t\t\tonMouseLeave={() => setHovering(false)}\r\n\t\t\tonClick={(e) => (onClick ? onClick(e) : null)}\r\n\t\t\tstyle={parentStyle}\r\n\t\t>\r\n\t\t\t<img\r\n\t\t\t\tsrc={getImageSrc(name)}\r\n\t\t\t\tclassName=\"ui medium image\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tminWidth: '300px',\r\n\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\tobjectPosition: '50% 10%',\r\n\t\t\t\t\theight: '200px',\r\n\t\t\t\t\tmarginLeft: '-80px'\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n */\r\n\r\nconst CharacterThumbnailComponent: FunctionComponent<CharacterThumbnailProps> = ({\r\n\tname,\r\n\tonClick,\r\n\tisActive\r\n}) => {\r\n\tconst [ hovering, setHovering ] = useState(false);\r\n\tconst parentStyle = {\r\n\t\theight: '80px',\r\n\t\twidth: '80px',\r\n\t\toverflow: 'hidden',\r\n\t\tbackgroundColor: 'rgba(200, 200, 200, 0.15)',\r\n\t\t// margin: '3px',\r\n\t\tborder: '1px solid rgba(255, 255, 255, 0.1)'\r\n\t};\r\n\r\n\tconst containerStyle = {\r\n\t\toverflow: 'hidden',\r\n\t\ttransform: 'skew(45deg) scale(1.2)',\r\n\t\tbackgroundColor: 'rgba(255, 255, 255, 0.15)',\r\n\t\tborder: '1px solid ',\r\n\t\tborderColor: 'rgba(200, 200, 200, 0.5)',\r\n\t\twidth: '90px',\r\n\t\theight: '90px'\r\n\t};\r\n\r\n\tif ((hovering || isActive) && onClick) {\r\n\t\tObject.assign(containerStyle, {\r\n\t\t\tbackgroundColor: 'rgba(200, 200, 200, 1)',\r\n\t\t\ttransform: 'skew(45deg) scale(1.2)',\r\n\t\t\tborderColor: 'white'\r\n\t\t});\r\n\r\n\t\tObject.assign(parentStyle, {\r\n\t\t\tbackgroundColor: 'rgba(255, 190, 16, 0.9)'\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\t// padding: 0,\r\n\t\t\t\t// margin: 2,\r\n\t\t\t\tbackgroundColor: 'rgba(255, 255, 255, 0.01)',\r\n\t\t\t\tborder: '1px solid rgba(255, 255, 255, 0.02)'\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div\r\n\t\t\t\tonMouseEnter={() => setHovering(true)}\r\n\t\t\t\tonMouseLeave={() => setHovering(false)}\r\n\t\t\t\tonClick={(e) => (onClick ? onClick(e) : null)}\r\n\t\t\t\tstyle={parentStyle}\r\n\t\t\t\tclassName=\"test\"\r\n\t\t\t>\r\n\t\t\t\t<div style={containerStyle}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\theight: 'auto',\r\n\t\t\t\t\t\t\twidth: '70px',\r\n\t\t\t\t\t\t\tmargin: 'auto',\r\n\t\t\t\t\t\t\tmarginTop: '-5px',\r\n\t\t\t\t\t\t\ttransform: 'skew(-45deg)'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tsrc={getImageSrc(`characters/mini/${name}`)}\r\n\t\t\t\t\t\tclassName=\"ui medium image\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CharacterThumbnailComponent;\r\n","C:\\Projects\\erbs\\ui\\src\\components\\loadOutItem.component.tsx",[],"C:\\Projects\\erbs\\ui\\src\\utilities\\Types.tsx",[],"C:\\Projects\\erbs\\ui\\src\\utilities\\types.tsx",[],"C:\\Projects\\erbs\\ui\\src\\utilities\\getList.tsx",[],"C:\\Projects\\erbs\\ui\\src\\components\\equipmentFilter.component.tsx",["116","117"],"import React, { FunctionComponent } from 'react';\r\nimport { Button, Segment, Header, Form, Radio, Dropdown, Label } from 'semantic-ui-react';\r\nimport { Types } from '../utilities/types';\r\nimport { ICharacter, WeaponTypes } from 'erbs-sdk';\r\nimport { Weapons } from '../data/Weapons';\r\n\r\nconst weaponTypeOptions = (selectedCharacter?: ICharacter) => {\r\n\treturn Object.entries(WeaponTypes as any)\r\n\t\t.filter(([ key, value ]: [string, string]) => {\r\n\t\t\tif (!selectedCharacter) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn Weapons[key].usableBy.some(({ name }) => name === selectedCharacter.name);\r\n\t\t})\r\n\t\t.map(([ key, value ]) => ({\r\n\t\t\tkey,\r\n\t\t\tname: value\r\n\t\t}));\r\n};\r\n\r\ninterface EquipmentFilterProps {\r\n\tselectedRadio: string;\r\n\tsetSelectedWeaponType: (string) => any;\r\n\tselectedWeaponType: string;\r\n\tsetSelectedRadio: (string) => any;\r\n\tselectedCharacter?: ICharacter;\r\n}\r\n\r\nexport const EquipmentFilterComponent: FunctionComponent<EquipmentFilterProps> = ({\r\n\tselectedRadio,\r\n\tsetSelectedRadio,\r\n\tsetSelectedWeaponType,\r\n\tselectedCharacter,\r\n\tselectedWeaponType\r\n}) => (\r\n\t<Segment.Group\r\n\t\tstyle={{\r\n\t\t\tborderRadius: 0,\r\n\t\t\tbackgroundColor: 'rgba(66, 64, 74, 0.2)',\r\n\t\t\tmarginTop: 14\r\n\t\t}}\r\n\t>\r\n\t\t<Segment basic color=\"black\" inverted textAlign=\"center\" raised>\r\n\t\t\t<Header>Filters</Header>\r\n\t\t</Segment>\r\n\t\t<Segment basic>\r\n\t\t\t<Form inverted color=\"blue\">\r\n\t\t\t\t<Label\r\n\t\t\t\t\tcolor={'brown'}\r\n\t\t\t\t\tstyle={{ width: '100%', textAlign: 'center', marginBottom: '8px' }}\r\n\t\t\t\t>\r\n\t\t\t\t\tArmor Types\r\n\t\t\t\t</Label>\r\n\t\t\t\t<Form.Group inline>\r\n\t\t\t\t\t{Object.keys(Types).slice(1).map((type, idx) => (\r\n\t\t\t\t\t\t<Form.Field key={`${type}${idx}`}>\r\n\t\t\t\t\t\t\t<Radio\r\n\t\t\t\t\t\t\t\tname=\"filterSelect\"\r\n\t\t\t\t\t\t\t\tvalue={type}\r\n\t\t\t\t\t\t\t\tlabel={type}\r\n\t\t\t\t\t\t\t\tchecked={selectedRadio === type}\r\n\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\tsetSelectedWeaponType(null);\r\n\t\t\t\t\t\t\t\t\tsetSelectedRadio(selectedRadio === type ? null : type);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Label\r\n\t\t\t\t\tcolor={'brown'}\r\n\t\t\t\t\tstyle={{ width: '100%', textAlign: 'center', marginBottom: '8px' }}\r\n\t\t\t\t>\r\n\t\t\t\t\tWeapon Types\r\n\t\t\t\t</Label>\r\n\t\t\t\t<Form.Group inline style={{ flexWrap: 'wrap', justifyContent: 'flex-start' }}>\r\n\t\t\t\t\t{weaponTypeOptions(selectedCharacter).map(({ key, name }, idx) => (\r\n\t\t\t\t\t\t<Form.Radio\r\n\t\t\t\t\t\t\tkey={`${name}${idx}`}\r\n\t\t\t\t\t\t\tlabel={name}\r\n\t\t\t\t\t\t\tvalue={key as string}\r\n\t\t\t\t\t\t\tchecked={selectedWeaponType === key}\r\n\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\tif (selectedWeaponType === key) {\r\n\t\t\t\t\t\t\t\t\tsetSelectedWeaponType(null);\r\n\t\t\t\t\t\t\t\t\tsetSelectedRadio(null);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tsetSelectedRadio(Types.Weapon);\r\n\t\t\t\t\t\t\t\t\tsetSelectedWeaponType(key);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t// content={\r\n\t\t\t\t\t\t\t// \t<Radio\r\n\t\t\t\t\t\t\t// \t\tname=\"filterSelect\"\r\n\t\t\t\t\t\t\t// \t\tvalue={key as string}\r\n\t\t\t\t\t\t\t// \t\tchecked={selectedWeaponType === key}\r\n\t\t\t\t\t\t\t// \t\tonChange={() => {\r\n\t\t\t\t\t\t\t// \t\t\tif (selectedWeaponType === key) {\r\n\t\t\t\t\t\t\t// \t\t\t\tsetSelectedWeaponType(null);\r\n\t\t\t\t\t\t\t// \t\t\t\tsetSelectedRadio(null);\r\n\t\t\t\t\t\t\t// \t\t\t} else {\r\n\t\t\t\t\t\t\t// \t\t\t\tsetSelectedRadio(Types.Weapon);\r\n\t\t\t\t\t\t\t// \t\t\t\tsetSelectedWeaponType(key);\r\n\t\t\t\t\t\t\t// \t\t\t}\r\n\t\t\t\t\t\t\t// \t\t}}\r\n\t\t\t\t\t\t\t// \t/>\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Form.Group>\r\n\t\t\t</Form>\r\n\t\t</Segment>\r\n\t</Segment.Group>\r\n);\r\n","C:\\Projects\\erbs\\ui\\src\\components\\characterCard.component.tsx",[],"C:\\Projects\\erbs\\ui\\src\\components\\desktopLoadout.component.tsx",["118"],"import React, { FunctionComponent } from 'react';\r\nimport { Button, Segment, Header } from 'semantic-ui-react';\r\nimport { LoadOutItemComponent } from './loadOutItem.component';\r\nimport { ICharacter, Loadout } from 'erbs-sdk';\r\nimport { Types } from '../utilities/types';\r\nimport { getImageSrc } from '../utilities/getImageSrc';\r\n\r\nexport interface LoadoutProps {\r\n\tloadout: Loadout;\r\n\tselectedCharacter: ICharacter;\r\n\tonLoadoutItemClick: any;\r\n}\r\n\r\nexport const DesktopLoadoutComponent: FunctionComponent<LoadoutProps> = ({\r\n\tloadout,\r\n\tselectedCharacter,\r\n\tonLoadoutItemClick\r\n}) => (\r\n\t<Segment\r\n\t\tbasic\r\n\t\tfloated=\"left\"\r\n\t\tinverted\r\n\t\tcolor=\"black\"\r\n\t\tstyle={{ minHeight: '95vh', marginTop: 0 }}\r\n\t>\r\n\t\t<Segment.Group inverted basic style={{ border: 0, borderRadius: 0 }}>\r\n\t\t\t<Segment basic inverted style={{ borderRadius: 0 }}>\r\n\t\t\t\t<Header as=\"h2\">LOADOUT</Header>\r\n\t\t\t</Segment>\r\n\t\t\t<Segment\r\n\t\t\t\traised\r\n\t\t\t\tinverted\r\n\t\t\t\tsecondary\r\n\t\t\t\tcolor=\"black\"\r\n\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\tplaceholder={!selectedCharacter}\r\n\t\t\t\tfluid\r\n\t\t\t\tstyle={{ minHeight: '166px' }}\r\n\t\t\t>\r\n\t\t\t\t{selectedCharacter && (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(66, 64, 74, 0.5)',\r\n\t\t\t\t\t\t\tborder: '1px solid rgba(125, 125, 125, 0.1)',\r\n\t\t\t\t\t\t\tboxShadow: '0 1px 2px 0 rgba(34,36,38,.15)'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<img src={getImageSrc(`characters/mini/${selectedCharacter.name}`)} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{!selectedCharacter && (\r\n\t\t\t\t\t<div style={{ maxWidth: '120px' }}>No Character Selected</div>\r\n\t\t\t\t)}\r\n\t\t\t</Segment>\r\n\t\t\t<Segment raised inverted secondary color=\"black\">\r\n\t\t\t\t<LoadOutItemComponent\r\n\t\t\t\t\titem={loadout.weapon}\r\n\t\t\t\t\ttype={Types.Weapon}\r\n\t\t\t\t\tonClick={onLoadoutItemClick}\r\n\t\t\t\t/>\r\n\t\t\t</Segment>\r\n\t\t\t<Segment raised inverted secondary color=\"black\">\r\n\t\t\t\t<LoadOutItemComponent\r\n\t\t\t\t\titem={loadout.chest}\r\n\t\t\t\t\ttype={Types.Chest}\r\n\t\t\t\t\tonClick={onLoadoutItemClick}\r\n\t\t\t\t/>\r\n\t\t\t</Segment>\r\n\t\t\t<Segment basic inverted secondary color=\"black\">\r\n\t\t\t\t<LoadOutItemComponent\r\n\t\t\t\t\titem={loadout.head}\r\n\t\t\t\t\ttype={Types.Head}\r\n\t\t\t\t\tonClick={onLoadoutItemClick}\r\n\t\t\t\t/>\r\n\t\t\t</Segment>\r\n\t\t\t<Segment basic inverted secondary color=\"black\">\r\n\t\t\t\t<LoadOutItemComponent\r\n\t\t\t\t\titem={loadout.arm}\r\n\t\t\t\t\ttype={Types.Arm}\r\n\t\t\t\t\tonClick={onLoadoutItemClick}\r\n\t\t\t\t/>\r\n\t\t\t</Segment>\r\n\t\t\t<Segment basic inverted secondary color=\"black\">\r\n\t\t\t\t<LoadOutItemComponent\r\n\t\t\t\t\titem={loadout.legs}\r\n\t\t\t\t\ttype={Types.Leg}\r\n\t\t\t\t\tonClick={onLoadoutItemClick}\r\n\t\t\t\t/>\r\n\t\t\t</Segment>\r\n\t\t\t<Segment basic inverted secondary color=\"black\">\r\n\t\t\t\t<LoadOutItemComponent\r\n\t\t\t\t\titem={loadout.accessory}\r\n\t\t\t\t\ttype={Types.Accessory}\r\n\t\t\t\t\tonClick={onLoadoutItemClick}\r\n\t\t\t\t/>\r\n\t\t\t</Segment>\r\n\t\t\t<Segment inverted textAlign=\"center\" color=\"black\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\tstyle={{ borderRadius: '0' }}\r\n\t\t\t\t\tfluid\r\n\t\t\t\t\tonClick={() => onLoadoutItemClick()}\r\n\t\t\t\t>\r\n\t\t\t\t\tClear All\r\n\t\t\t\t</Button>\r\n\t\t\t</Segment>\r\n\t\t</Segment.Group>\r\n\t</Segment>\r\n);\r\n","C:\\Projects\\erbs\\ui\\src\\data\\Weapons.ts",[],"C:\\Projects\\erbs\\ui\\src\\components\\characterPane.component.tsx",[],"C:\\Projects\\erbs\\ui\\src\\components\\equipmentPane.component.tsx",["119","120"],"import React, { useContext } from 'react';\r\nimport { Segment, Grid, Header, Button, Image, Transition, List, Label } from 'semantic-ui-react';\r\nimport { ItemCardComponent } from './itemCard.component';\r\nimport { EquipmentFilterComponent } from './equipmentFilter.component';\r\nimport { getItemList } from '../utilities/getList';\r\nimport { rarityColor } from '../utilities/rarityColor';\r\nimport { getImageSrc } from '../utilities/getImageSrc';\r\nimport { Item } from 'erbs-sdk';\r\nimport { ItemModalContext } from '../state/itemModal';\r\n\r\ninterface EquipmentPaneProps {\r\n\tselectedItem: any;\r\n\taddSelectedToLoadout: () => void;\r\n\tselectedRadio: any;\r\n\tselectedCharacter: any;\r\n\tselectedWeaponType: any;\r\n\tsetSelectedWeaponType: React.Dispatch<any>;\r\n\tsetSelectedRadio: React.Dispatch<any>;\r\n\tonLookupItemClick: (item: any) => void;\r\n}\r\n\r\nexport const EquipmentPaneComponent: React.FC<EquipmentPaneProps> = ({\r\n\tselectedItem,\r\n\taddSelectedToLoadout,\r\n\tselectedRadio,\r\n\tselectedCharacter,\r\n\tselectedWeaponType,\r\n\tsetSelectedWeaponType,\r\n\tsetSelectedRadio,\r\n\tonLookupItemClick\r\n}) => {\r\n\tlet item: Item<any>;\r\n\tconst { setItem } = useContext(ItemModalContext);\r\n\r\n\ttry {\r\n\t\titem = selectedItem ? new Item(selectedItem.name) : null;\r\n\t} catch (e) {\r\n\t\tconsole.warn(e);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grid>\r\n\t\t\t<Grid.Row width={11}>\r\n\t\t\t\t<Grid.Column mobile={10} tablet={6} computer={6} widescreen={5}>\r\n\t\t\t\t\t<Segment.Group\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(66, 64, 74, 0.2)',\r\n\t\t\t\t\t\t\tmarginTop: 14\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Segment textAlign=\"center\" basic fluid style={{ padding: 0, margin: 0 }}>\r\n\t\t\t\t\t\t\t<ItemCardComponent\r\n\t\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\t\taddSelectedToLoadout={addSelectedToLoadout}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Segment>\r\n\r\n\t\t\t\t\t\t{item &&\r\n\t\t\t\t\t\titem.materials &&\r\n\t\t\t\t\t\tObject.entries(item.materials).length > 0 && (\r\n\t\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: 'rgba(0, 0, 0, 0.05)' }}\r\n\t\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Label style={{ width: '100%', textAlign: 'center' }} color=\"red\">\r\n\t\t\t\t\t\t\t\t\tTotal Material Requirements\r\n\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tflexWrap: 'wrap',\r\n\t\t\t\t\t\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{Object.entries(\r\n\t\t\t\t\t\t\t\t\t\titem.materials\r\n\t\t\t\t\t\t\t\t\t).map(([ material, quantity ], key) => (\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ margin: '5px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\t\t\t\t\timage\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={key + material}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setItem(material)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={getImageSrc(material)} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{quantity}\r\n\t\t\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column width={10}>\r\n\t\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t\t\t<EquipmentFilterComponent\r\n\t\t\t\t\t\t\t\tselectedRadio={selectedRadio}\r\n\t\t\t\t\t\t\t\tselectedCharacter={selectedCharacter}\r\n\t\t\t\t\t\t\t\tselectedWeaponType={selectedWeaponType}\r\n\t\t\t\t\t\t\t\tsetSelectedWeaponType={setSelectedWeaponType}\r\n\t\t\t\t\t\t\t\tsetSelectedRadio={setSelectedRadio}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid.Row>\r\n\r\n\t\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t\t\t<Segment.Group\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(66, 64, 74, 0.2)',\r\n\t\t\t\t\t\t\t\t\tmarginTop: 14\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\t\t\tattached=\"top\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tborder: 0,\r\n\t\t\t\t\t\t\t\t\t\tborderRadius: 0\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\traised\r\n\t\t\t\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\t\t\t\tcolor=\"black\"\r\n\t\t\t\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Header inverted style={{ textTransform: 'capitalize' }}>\r\n\t\t\t\t\t\t\t\t\t\t{selectedRadio ? (\r\n\t\t\t\t\t\t\t\t\t\t\t(selectedWeaponType || selectedRadio).toLowerCase()\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t'equipment'\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tflexFlow: 'row wrap',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{!selectedRadio && (\r\n\t\t\t\t\t\t\t\t\t\t<Segment fluid secondary inverted placeholder>\r\n\t\t\t\t\t\t\t\t\t\t\tSelect a Filter\r\n\t\t\t\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{selectedRadio &&\r\n\t\t\t\t\t\t\t\t\t\tgetItemList(\r\n\t\t\t\t\t\t\t\t\t\t\tselectedRadio,\r\n\t\t\t\t\t\t\t\t\t\t\tselectedWeaponType\r\n\t\t\t\t\t\t\t\t\t\t).map((item) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: 2,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'2px outset rgba(255, 255, 255, 0.2)'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={rarityColor(item.rarity)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => onLookupItemClick(item)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Transition>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trounded\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"tiny\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={getImageSrc(item.name)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Transition>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid.Row>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","C:\\Projects\\erbs\\ui\\src\\components\\routePane.component.tsx",["121","122","123","124","125","126","127","128","129","130","131"],"import React, { useContext, useState } from 'react';\r\nimport {\r\n\tSegment,\r\n\tGrid,\r\n\tHeader,\r\n\tButton,\r\n\tImage,\r\n\tTransition,\r\n\tList,\r\n\tLabel,\r\n\tInput,\r\n\tForm,\r\n\tDropdown\r\n} from 'semantic-ui-react';\r\nimport { ItemCardComponent } from './itemCard.component';\r\nimport { EquipmentFilterComponent } from './equipmentFilter.component';\r\nimport { getItemList } from '../utilities/getList';\r\nimport { rarityColor } from '../utilities/rarityColor';\r\nimport { getImageSrc } from '../utilities/getImageSrc';\r\nimport { ILoadout, Item, Loadout, Locations, Route } from 'erbs-sdk';\r\nimport { ItemModalContext } from '../state/itemModal';\r\n\r\ninterface RoutePaneProps {\r\n\tloadout: Loadout;\r\n}\r\n\r\nconst defaultWeights = {\r\n\tWeapon: 1,\r\n\tChest: 1,\r\n\tHead: 1,\r\n\tArm: 1,\r\n\tLeg: 1,\r\n\tAccessory: 1\r\n};\r\n\r\nexport const RoutePaneComponent: React.FC<RoutePaneProps> = ({ loadout }) => {\r\n\tconst [ routes, setRoutes ] = useState([]);\r\n\tconst [ weights, updateWeights ] = useState(defaultWeights);\r\n\tconst [ startingLocation, setStartingLocation ] = useState(null);\r\n\r\n\tconst { setItem } = useContext(ItemModalContext);\r\n\r\n\tconst generateRoute = () => {\r\n\t\ttry {\r\n\t\t\tconst route = new Route(loadout, weights, startingLocation);\r\n\t\t\tsetRoutes(route.generate());\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(e);\r\n\t\t\tsetRoutes([]);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid>\r\n\t\t\t<Grid.Row width={11}>\r\n\t\t\t\t<Grid.Column mobile={10} tablet={6} computer={6} widescreen={5}>\r\n\t\t\t\t\t<Segment.Group\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(66, 64, 74, 0.2)',\r\n\t\t\t\t\t\t\tmarginTop: 14\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborder: 0,\r\n\t\t\t\t\t\t\t\tborderRadius: 0\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\traised\r\n\t\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\t\tcolor=\"black\"\r\n\t\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Header>Customization</Header>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\tstyle={{ margin: 0, background: 'transparent' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Header style={{ textAlign: 'center' }}>Equipment Importance</Header>\r\n\t\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tflexFlow: 'wrap column',\r\n\t\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{Object.keys(defaultWeights).map((weight, idx) => (\r\n\t\t\t\t\t\t\t\t\t<Form.Field inverted key={weight + idx}>\r\n\t\t\t\t\t\t\t\t\t\t<label style={{ textTransform: 'capitalize' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{loadout &&\r\n\t\t\t\t\t\t\t\t\t\t\tloadout[weight.toLowerCase()] &&\r\n\t\t\t\t\t\t\t\t\t\t\tloadout[weight.toLowerCase()].name ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\tloadout[weight.toLowerCase()].name\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\tweight\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\t\t\t\t\t\t\tstep={1}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbackground: `linear-gradient(to right, #2185d0 0%, #2185d0 ${weights[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tweight\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t]}%, #fff ${weights[weight]}%, #fff 100%)`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: '8px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\theight: '5px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\toutline: 'none',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttransition: 'background 450ms ease-in',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tWebkitAppearance: 'none',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t'&::webkit-slider-thumb': {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tWebkitApperance: 'none',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'red'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t} as any\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\t\t\t\t\t\tmax={100}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={weights[weight]}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\tupdateWeights({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t...weights,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t[weight]: e.target.value\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\t\tstyle={{ padding: 8, margin: 0 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Header>Desired Starting Location</Header>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t<Segment>\r\n\t\t\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\tplaceholder=\"Automatic\"\r\n\t\t\t\t\t\t\t\tvalue={startingLocation}\r\n\t\t\t\t\t\t\t\tonChange={(e, { value }) => setStartingLocation(value)}\r\n\t\t\t\t\t\t\t\toptions={[ { key: '', value: null, text: 'Automatic' } ].concat(\r\n\t\t\t\t\t\t\t\t\tObject.keys(Locations)\r\n\t\t\t\t\t\t\t\t\t\t.filter((loc) => loc !== Locations['Research Center'])\r\n\t\t\t\t\t\t\t\t\t\t.map((loc) => ({\r\n\t\t\t\t\t\t\t\t\t\t\tkey: loc,\r\n\t\t\t\t\t\t\t\t\t\t\ttext: loc,\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: loc\r\n\t\t\t\t\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborder: 0,\r\n\t\t\t\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(0, 0, 0, 0.5)'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\traised\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\tonClick={generateRoute}\r\n\t\t\t\t\t\t\t\tcontent=\"Generate Routes\"\r\n\t\t\t\t\t\t\t\tcolor=\"green\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column width={10}>\r\n\t\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t\t\t<Segment.Group\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(66, 64, 74, 0.2)',\r\n\t\t\t\t\t\t\t\t\tmarginTop: 14\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Segment basic color=\"black\" inverted textAlign=\"center\" raised>\r\n\t\t\t\t\t\t\t\t\t<Header>Total Materials Needed</Header>\r\n\t\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t\t<Segment basic raised stacked>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tflexWrap: 'wrap',\r\n\t\t\t\t\t\t\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{Object.entries(loadout.materials)\r\n\t\t\t\t\t\t\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t\t\t\t\t\t\t([ material ]) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmaterial && material !== 'undefined'\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t.map(([ material, quantity ], key) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div key={key + material} style={{ margin: '5px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"teal\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\timage\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setItem(material)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={getImageSrc(material)} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Label.Detail>{quantity}</Label.Detail>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid.Row>\r\n\r\n\t\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t\t\t<Segment.Group\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: 0,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(66, 64, 74, 0.2)',\r\n\t\t\t\t\t\t\t\t\tmarginTop: 14\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\t\t\tattached=\"top\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tborder: 0,\r\n\t\t\t\t\t\t\t\t\t\tborderRadius: 0\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\traised\r\n\t\t\t\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\t\t\t\tcolor=\"black\"\r\n\t\t\t\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Header inverted style={{ textTransform: 'capitalize' }}>\r\n\t\t\t\t\t\t\t\t\t\tRoutes\r\n\t\t\t\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t\t<Segment basic>\r\n\t\t\t\t\t\t\t\t\t{!routes.length && (\r\n\t\t\t\t\t\t\t\t\t\t<Segment\r\n\t\t\t\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\t\t\t\tsecondary\r\n\t\t\t\t\t\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder\r\n\t\t\t\t\t\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tNo Routes Generated\r\n\t\t\t\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{routes.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<div>{JSON.stringify(routes, null, 2)}</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t</Segment.Group>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid.Row>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","C:\\Projects\\erbs\\ui\\src\\state\\itemModal\\index.tsx",[],"C:\\Projects\\erbs\\ui\\src\\components\\itemModal.component.tsx",[],"C:\\Projects\\erbs\\ui\\src\\components\\itemModalButton.component.tsx",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":14},{"ruleId":"136","severity":1,"message":"140","line":2,"column":17,"nodeType":"138","messageId":"139","endLine":2,"endColumn":30},{"ruleId":"136","severity":1,"message":"141","line":4,"column":2,"nodeType":"138","messageId":"139","endLine":4,"endColumn":8},{"ruleId":"136","severity":1,"message":"142","line":5,"column":2,"nodeType":"138","messageId":"139","endLine":5,"endColumn":6},{"ruleId":"136","severity":1,"message":"143","line":6,"column":2,"nodeType":"138","messageId":"139","endLine":6,"endColumn":7},{"ruleId":"136","severity":1,"message":"144","line":7,"column":2,"nodeType":"138","messageId":"139","endLine":7,"endColumn":6},{"ruleId":"136","severity":1,"message":"145","line":8,"column":2,"nodeType":"138","messageId":"139","endLine":8,"endColumn":7},{"ruleId":"136","severity":1,"message":"146","line":11,"column":2,"nodeType":"138","messageId":"139","endLine":11,"endColumn":11},{"ruleId":"136","severity":1,"message":"145","line":2,"column":39,"nodeType":"138","messageId":"139","endLine":2,"endColumn":44},{"ruleId":"136","severity":1,"message":"147","line":3,"column":16,"nodeType":"138","messageId":"139","endLine":3,"endColumn":26},{"ruleId":"136","severity":1,"message":"148","line":18,"column":10,"nodeType":"138","messageId":"139","endLine":18,"endColumn":17},{"ruleId":"149","severity":1,"message":"150","line":111,"column":6,"nodeType":"151","endLine":121,"endColumn":8},{"ruleId":"136","severity":1,"message":"141","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"136","severity":1,"message":"152","line":2,"column":48,"nodeType":"138","messageId":"139","endLine":2,"endColumn":56},{"ruleId":"149","severity":1,"message":"150","line":48,"column":7,"nodeType":"151","endLine":48,"endColumn":77},{"ruleId":"136","severity":1,"message":"144","line":2,"column":60,"nodeType":"138","messageId":"139","endLine":2,"endColumn":64},{"ruleId":"149","severity":1,"message":"150","line":88,"column":13,"nodeType":"151","endLine":88,"endColumn":48},{"ruleId":"136","severity":1,"message":"143","line":7,"column":2,"nodeType":"138","messageId":"139","endLine":7,"endColumn":7},{"ruleId":"136","severity":1,"message":"153","line":8,"column":2,"nodeType":"138","messageId":"139","endLine":8,"endColumn":12},{"ruleId":"136","severity":1,"message":"144","line":9,"column":2,"nodeType":"138","messageId":"139","endLine":9,"endColumn":6},{"ruleId":"136","severity":1,"message":"154","line":11,"column":2,"nodeType":"138","messageId":"139","endLine":11,"endColumn":7},{"ruleId":"136","severity":1,"message":"155","line":15,"column":10,"nodeType":"138","messageId":"139","endLine":15,"endColumn":27},{"ruleId":"136","severity":1,"message":"156","line":16,"column":10,"nodeType":"138","messageId":"139","endLine":16,"endColumn":34},{"ruleId":"136","severity":1,"message":"157","line":17,"column":10,"nodeType":"138","messageId":"139","endLine":17,"endColumn":21},{"ruleId":"136","severity":1,"message":"158","line":18,"column":10,"nodeType":"138","messageId":"139","endLine":18,"endColumn":21},{"ruleId":"136","severity":1,"message":"159","line":20,"column":10,"nodeType":"138","messageId":"139","endLine":20,"endColumn":18},{"ruleId":"136","severity":1,"message":"137","line":20,"column":20,"nodeType":"138","messageId":"139","endLine":20,"endColumn":24},{"ruleId":"149","severity":1,"message":"150","line":213,"column":15,"nodeType":"151","endLine":213,"endColumn":50},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"@typescript-eslint/no-unused-vars","'Item' is defined but never used.","Identifier","unusedVar","'PureComponent' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'Image' is defined but never used.","'List' is defined but never used.","'Label' is defined but never used.","'Container' is defined but never used.","'IBasicItem' is defined but never used.","'setItem' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Dropdown' is defined but never used.","'Transition' is defined but never used.","'Input' is defined but never used.","'ItemCardComponent' is defined but never used.","'EquipmentFilterComponent' is defined but never used.","'getItemList' is defined but never used.","'rarityColor' is defined but never used.","'ILoadout' is defined but never used.","no-global-assign","no-unsafe-negation"]